---
- hosts: localhost
  connection: local
  tasks:
   - name: Fetch nifi processor group id
     uri:
       url: http://localhost:8080/nifi-api/process-groups/root
       method: GET
     register: processor_id

   - name: Get processor group
     uri:
       url: http://localhost:8080/nifi-api/flow/process-groups/{{ processor_id.json.id }}
       method: GET
     register: processor_group

   - name: Get Default Processor Group
     uri:
       url: http://localhost:8080/nifi-api/flow/parameter-contexts
       method: GET
     register: pg

   - name: Connection of Parameter context to processor group 
     uri:
       url: http://localhost:8080/nifi-api/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}
       method: PUT
       body_format: json
       body: {"revision": {
            "version": 0,
            "lastModifier": "Ansible"
        },"component":
              {"id": "{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}","parameterContext":{"id": "{{ pg.json.parameterContexts[0].id }}"}}
     }

   - name: Create DistributedMapCacheServer
     uri:
       url: http://localhost:8080/nifi-api/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}/controller-services
       method: POST
       body_format: json
       status_code: 201
       body: {"revision": {"clientId": "ansible","version": 0,"lastModifier": "ansible"},"component":{"type":"org.apache.nifi.distributed.cache.server.map.DistributedMapCacheServer","properties" : { "Port": "4557"}}}

   - name: Create DistributedMapCacheServer
     uri:
       url: http://localhost:8080/nifi-api/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}/controller-services
       method: POST
       body_format: json
       status_code: 201
       body: {"revision": {"clientId": "ansible","version": 0,"lastModifier": "ansible"},"component":{"type":"org.apache.nifi.distributed.cache.server.map.DistributedMapCacheServer","properties" : { "Port": "4558"}}}


   - name: Get controllers
     uri:
       url: http://localhost:8080/nifi-api/flow/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}/controller-services
       method: GET
     register: controllers_list

   - name: Add s3 credentials parameters
     uri:
       url: http://localhost:8080/nifi-api/controller-services/{{ item.id }}
       method: PUT
       body_format: json
       body: {"revision": {
             "version": "{{ item.revision.version }}",
            "lastModifier": "Ansible"
        },
        "component": {"id": "{{ item.id }}", "name": "cQube-GA-S3-cred",
        "properties" : { "Access Key" : "#{s3_access_key}", "Secret Key":"#{s3_secret_key}"}}

     }
     loop: "{{ controllers_list.json | json_query('controllerServices[*]') }}"
     when: item.component.name == 'cQube-GA-S3-cred'

   - name: Add postgre-source-pwd
     uri:
       url: http://localhost:8080/nifi-api/controller-services/{{ item.id }}
       method: PUT
       body_format: json
       body: {"revision": {
             "version": "{{ item.revision.version }}",
            "lastModifier": "Ansible"
        },
        "component": {"id": "{{ item.id }}", "name": "postgresql-CQube-Source",
        "properties" : { "Password" : "#{postgre_pwd}"}}

     }
     loop: "{{ controllers_list.json | json_query('controllerServices[*]') }}"
     when: item.component.name == 'postgresql-CQube-Source'

   - name: Add postgre-dtn-pwd
     uri:
       url: http://localhost:8080/nifi-api/controller-services/{{ item.id }}
       method: PUT
       body_format: json
       body: {"revision": {
             "version": "{{ item.revision.version }}",
            "lastModifier": "Ansible"
        },
        "component": {"id": "{{ item.id }}", "name": "Postgre-Agg-Dtn",
        "properties" : { "Password" : "#{postgre_pwd}"}}

     }
     loop: "{{ controllers_list.json | json_query('controllerServices[*]') }}"
     when: item.component.name == 'Postgre-Agg-Dtn'