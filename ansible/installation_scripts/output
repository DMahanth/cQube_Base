
PLAY [localhost] ************************************************************************************************************************

TASK [Gathering Facts] ******************************************************************************************************************
ok: [localhost]

TASK [Fetch nifi processor group id] ****************************************************************************************************
ok: [localhost]

TASK [Get processor group] **************************************************************************************************************
ok: [localhost]

TASK [fetch processors id] **************************************************************************************************************
ok: [localhost] => {
    "processor_group.json.processGroupFlow.flow.processGroups[0].component.id": "9417f840-fd5e-3670-5946-85d8525322ee"
}

TASK [Get processor group] **************************************************************************************************************
ok: [localhost]

TASK [fetch parameter context id] *******************************************************************************************************
ok: [localhost] => {
    "pg.json": {
        "currentTime": "18:11:06 UTC", 
        "parameterContexts": [
            {
                "component": {
                    "boundProcessGroups": [], 
                    "description": "", 
                    "id": "f383e5e4-0170-1000-d71b-240ce1bac73f", 
                    "name": "ENVIRONMENT VARIABLES", 
                    "parameters": [
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_db_user", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "postgres"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "sftp_private_key_path", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "~{{ sftp_user }}/.ssh/id_rsa"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "sftp_user", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqube"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "s3_input_bucket", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqube-input"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "sftp_input", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqube/data/emits"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "sftp_port", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "22"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_dtn_db", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqubedev"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_pwd", 
                                "referencingComponents": [], 
                                "sensitive": true, 
                                "value": "********"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_source_db", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqubedev"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "s3_output_bucket", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "cqube-output"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "sftp_hostname", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "localhost"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_driver_class_name", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "org.postgresql.Driver"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "s3_secret_key", 
                                "referencingComponents": [], 
                                "sensitive": true, 
                                "value": "********"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "s3_access_key", 
                                "referencingComponents": [], 
                                "sensitive": true, 
                                "value": "********"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_connection_url", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "jdbc:postgresql://localhost:5432/"
                            }
                        }, 
                        {
                            "canWrite": true, 
                            "parameter": {
                                "name": "postgre_driver_dir", 
                                "referencingComponents": [], 
                                "sensitive": false, 
                                "value": "../../development/nifi/jars/postgresql-42.2.10.jar"
                            }
                        }
                    ]
                }, 
                "id": "f383e5e4-0170-1000-d71b-240ce1bac73f", 
                "permissions": {
                    "canRead": true, 
                    "canWrite": true
                }, 
                "revision": {
                    "clientId": "value", 
                    "version": 2
                }
            }
        ]
    }
}

TASK [Get controllers] ******************************************************************************************************************
ok: [localhost]

TASK [controllers list print] ***********************************************************************************************************
ok: [localhost] => {
    "controllers_list": {
        "cache_control": "private, no-cache, no-store, no-transform", 
        "changed": false, 
        "connection": "close", 
        "content_security_policy": "frame-ancestors 'self'", 
        "content_type": "application/json", 
        "cookies": {}, 
        "cookies_string": "", 
        "date": "Thu, 19 Mar 2020 18:11:06 GMT", 
        "elapsed": 0, 
        "failed": false, 
        "json": {
            "controllerServices": [
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-dbcp-service-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.dbcp.DBCPService"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "Database Connection URL": {
                                "description": "A database connection URL used to connect to a database. May contain database system name, host, port, database name and some parameters. The exact syntax of a database connection URL is specified by your DBMS.", 
                                "displayName": "Database Connection URL", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database Connection URL", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Database Driver Class Name": {
                                "description": "Database driver class name", 
                                "displayName": "Database Driver Class Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database Driver Class Name", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Database User": {
                                "description": "Database user name", 
                                "displayName": "Database User", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database User", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Max Total Connections": {
                                "defaultValue": "8", 
                                "description": "The maximum number of active connections that can be allocated from this pool at the same time,  or negative for no limit.", 
                                "displayName": "Max Total Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Max Total Connections", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Max Wait Time": {
                                "defaultValue": "500 millis", 
                                "description": "The maximum amount of time that the pool will wait (when there are no available connections)  for a connection to be returned before failing, or -1 to wait indefinitely. ", 
                                "displayName": "Max Wait Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Max Wait Time", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Password": {
                                "description": "The password for the database user", 
                                "displayName": "Password", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Password", 
                                "required": false, 
                                "sensitive": true, 
                                "supportsEl": true
                            }, 
                            "Validation-query": {
                                "description": "Validation query used to validate connections before returning them. When connection is invalid, it get's dropped and new valid connection will be returned. Note!! Using validation might have some performance penalty.", 
                                "displayName": "Validation query", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Validation-query", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "database-driver-locations": {
                                "description": "Comma-separated list of files/folders and/or URLs containing the driver JAR and its dependencies (if any). For example '/var/tmp/mariadb-java-client-1.1.7.jar'", 
                                "displayName": "Database Driver Location(s)", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "database-driver-locations", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-max-conn-lifetime": {
                                "defaultValue": "-1", 
                                "description": "The maximum lifetime in milliseconds of a connection. After this time is exceeded the connection will fail the next activation, passivation or validation test. A value of zero or less means the connection has an infinite lifetime.", 
                                "displayName": "Max Connection Lifetime", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-max-conn-lifetime", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-max-idle-conns": {
                                "defaultValue": "8", 
                                "description": "The maximum number of connections that can remain idle in the pool, without extra ones being released, or negative for no limit.", 
                                "displayName": "Max Idle Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-max-idle-conns", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-min-evictable-idle-time": {
                                "defaultValue": "30 mins", 
                                "description": "The minimum amount of time a connection may sit idle in the pool before it is eligible for eviction.", 
                                "displayName": "Minimum Evictable Idle Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-min-evictable-idle-time", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-min-idle-conns": {
                                "defaultValue": "0", 
                                "description": "The minimum number of connections that can remain idle in the pool, without extra ones being created, or zero to create none.", 
                                "displayName": "Minimum Idle Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-min-idle-conns", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-soft-min-evictable-idle-time": {
                                "defaultValue": "-1", 
                                "description": "The minimum amount of time a connection may sit idle in the pool before it is eligible for eviction by the idle connection evictor, with the extra condition that at least a minimum number of idle connections remain in the pool. When the not-soft version of this option is set to a positive value, it is examined first by the idle connection evictor: when idle connections are visited by the evictor, idle time is first compared against it (without considering the number of idle connections in the pool) and then against this soft option, including the minimum idle connections constraint.", 
                                "displayName": "Soft Minimum Evictable Idle Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-soft-min-evictable-idle-time", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-time-between-eviction-runs": {
                                "defaultValue": "-1", 
                                "description": "The number of milliseconds to sleep between runs of the idle connection evictor thread. When non-positive, no idle connection evictor thread will be run.", 
                                "displayName": "Time Between Eviction Runs", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-time-between-eviction-runs", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "kerberos-credentials-service": {
                                "allowableValues": [], 
                                "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos", 
                                "displayName": "Kerberos Credentials Service", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "kerberos-credentials-service", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                        "multipleVersionsAvailable": false, 
                        "name": "postgresql-CQube-Source", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "Database Connection URL": "#{postgre_connection_url}#{postgre_source_db}", 
                            "Database Driver Class Name": "#{postgre_driver_class_name}", 
                            "Database User": "#{postgre_db_user}", 
                            "Max Total Connections": "8", 
                            "Max Wait Time": "500 millis", 
                            "Password": null, 
                            "Validation-query": null, 
                            "database-driver-locations": "#{postgre_driver_dir}", 
                            "dbcp-max-conn-lifetime": "-1", 
                            "dbcp-max-idle-conns": "8", 
                            "dbcp-min-evictable-idle-time": "30 mins", 
                            "dbcp-min-idle-conns": "0", 
                            "dbcp-soft-min-evictable-idle-time": "-1", 
                            "dbcp-time-between-eviction-runs": "-1", 
                            "kerberos-credentials-service": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "ff719cc6-488e-3f43-76c7-ea13b315a92e", 
                                    "name": "month-wise-attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select month as x_axis,count(attendance) as x_value,'Month-Wise Attendance' as chart_name from student_attendance where attendance = 1 group by month order by month", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "ff719cc6-488e-3f43-76c7-ea13b315a92e", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "7c6e5ba5-bf7d-3355-d03c-93921bac9cc8", 
                                    "name": "Total-Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select gender as x_axis,count(gender) as x_value,'Gender-wise' as chart_name from student_attendance group by gender\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "7c6e5ba5-bf7d-3355-d03c-93921bac9cc8", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "07ee2bbe-39e1-3169-b286-41acb7490a7c", 
                                    "name": "Schools Gender-Wise Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select gender as x_axis,count(attendance) as attribute_1,school_id as x_value,'Schools Gender-wise attenadnce' as chart_name from student_attendance where attendance=1 group by gender,school_id order by school_id,gender\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "07ee2bbe-39e1-3169-b286-41acb7490a7c", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "fd1f286e-a98f-38d7-9f18-10690479cede", 
                                    "name": "Total Schools", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select 'null' as  x_axis,count(distinct(school_id))as x_value,'reports' as chart_name,'Total Schools' as attribute_1 from student_attendance", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "fd1f286e-a98f-38d7-9f18-10690479cede", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "cbf4cb4a-8450-3799-02c0-78a7da7b00a3", 
                                    "name": "Transform-Data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select * from (SELECT school_id,student_id,month,gender, unnest(array['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']) AS Day, unnest(array[day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,day11,day12,day13,day14,day15,day16,day17,day18,day19,day20,day21,day22,day23,day24,day25,day26,day27,day28,day29,day30,day31]) AS attendance FROM student_attendance_tmp) t where t.attendance is not null", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "cbf4cb4a-8450-3799-02c0-78a7da7b00a3", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "5d59d129-48a7-35d5-a184-4f68f722b7ce", 
                                    "name": "SAVE-TRANSFORMED-TO-PG", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "095ea485-742a-38aa-48d7-4de55bf5a33b", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "student_attendance", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": null, 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "5d59d129-48a7-35d5-a184-4f68f722b7ce", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "f2c12336-d74b-3834-18fe-44095cf05cab", 
                                    "name": "Total students", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select 'null' as x_axis,count(distinct(student_id)) as x_value,'reports' as chart_name,'Total Students' as attribute_1 from student_attendance\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "f2c12336-d74b-3834-18fe-44095cf05cab", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0233368d-5762-3c32-e234-3b8a37cb0728", 
                                    "name": "All-schools-attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select school_id as x_axis,count(attendance) as x_value,'Attendance all schools' as chart_name from student_attendance where attendance=1 group by school_id\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0233368d-5762-3c32-e234-3b8a37cb0728", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "031751cf-7122-34c7-432e-a30425718358", 
                                    "name": "School-Wise-Monthly-Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select month as x_axis,count(attendance) as x_value,school_id as attribute_1,'School-Wise Monthly Attendance' as chart_name from student_attendance where attendance = 1 group by month,school_id order by school_id,month\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "031751cf-7122-34c7-432e-a30425718358", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "946f7e50-dc1e-3d2e-ad15-644abc67ecfa", 
                                    "name": "High_Low-Schools_Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "(select a.value as x_axis,a.school_id as x_value,'reports' as chart_name, 'Least attendance school' as attribute_1 from (select school_id,count(attendance)as value from student_attendance where attendance=1 group by school_id)as a group by a.school_id,a.value having a.value in ((select min(a.value) from (select school_id,count(attendance) as value from student_attendance where attendance=1 group by school_id)as a)))\nUNION\n(select a.value as x_axis,a.school_id as x_value,'reports' as chart_name,'Best attendance school' as attribute_1 from (select school_id,count(attendance)as value from student_attendance where attendance=1 group by school_id)as a group by a.school_id,a.value having a.value in ((select max(a.value) from (select school_id,count(attendance) as value from student_attendance where attendance=1 group by school_id)as a)))", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "946f7e50-dc1e-3d2e-ad15-644abc67ecfa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "2b4ba126-6640-3197-8cb9-012c266bbdee", 
                                    "name": "SAVE-SOURCE-TO-PG", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "student_attendance_tmp", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": null, 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "2b4ba126-6640-3197-8cb9-012c266bbdee", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLING", 
                        "type": "org.apache.nifi.dbcp.DBCPConnectionPool", 
                        "validationErrors": [
                            "'Database Driver Location(s)' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database Connection URL' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database Driver Class Name' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database User' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                        ], 
                        "validationStatus": "INVALID", 
                        "versionedComponentId": "cd1c6111-fd44-386b-95fb-e5104e31b28e"
                    }, 
                    "id": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLING", 
                        "validationStatus": "INVALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/cd1c6111-fd44-386b-10f7-e69ba601cb95"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-record-serialization-services-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.serialization.RecordSetWriterFactory"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "CSV Format": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator", 
                                            "displayName": "Custom Format", 
                                            "value": "custom"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180", 
                                            "displayName": "RFC 4180", 
                                            "value": "rfc-4180"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by Microsoft Excel", 
                                            "displayName": "Microsoft Excel", 
                                            "value": "excel"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data is Tab-Delimited instead of Comma Delimited", 
                                            "displayName": "Tab-Delimited", 
                                            "value": "tdf"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by MySQL", 
                                            "displayName": "MySQL Format", 
                                            "value": "mysql"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command", 
                                            "displayName": "Informix Unload", 
                                            "value": "informix-unload"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled", 
                                            "displayName": "Informix Unload Escape Disabled", 
                                            "value": "informix-unload-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "custom", 
                                "description": "Specifies which \"format\" the CSV data is in, or specifies if custom formatting should be used.", 
                                "displayName": "CSV Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "CSV Format", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Comment Marker": {
                                "description": "The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.", 
                                "displayName": "Comment Marker", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Comment Marker", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Date Format": {
                                "description": "Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).", 
                                "displayName": "Date Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Date Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Escape Character": {
                                "defaultValue": "\\", 
                                "description": "The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used.", 
                                "displayName": "Escape Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Escape Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Include Header Line": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "true", 
                                "description": "Specifies whether or not the CSV column names should be written out as the first line.", 
                                "displayName": "Include Header Line", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Include Header Line", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Include Trailing Delimiter": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If true, a trailing delimiter will be added to each CSV Record that is written. If false, the trailing delimiter will be omitted.", 
                                "displayName": "Include Trailing Delimiter", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Include Trailing Delimiter", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Null String": {
                                "description": "Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.", 
                                "displayName": "Null String", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Null String", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Quote Character": {
                                "defaultValue": "\"", 
                                "description": "The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.", 
                                "displayName": "Quote Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Quote Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Quote Mode": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "All values will be quoted using the configured quote character.", 
                                            "displayName": "Quote All Values", 
                                            "value": "ALL"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Values will be quoted only if they are contain special characters such as newline characters or field separators.", 
                                            "displayName": "Quote Minimal", 
                                            "value": "MINIMAL"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Values will be quoted unless the value is a number.", 
                                            "displayName": "Quote Non-Numeric Values", 
                                            "value": "NON_NUMERIC"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Values will not be quoted. Instead, all special characters will be escaped using the configured escape character.", 
                                            "displayName": "Do Not Quote Values", 
                                            "value": "NONE"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "MINIMAL", 
                                "description": "Specifies how fields should be quoted when they are written", 
                                "displayName": "Quote Mode", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Quote Mode", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Record Separator": {
                                "defaultValue": "\\n", 
                                "description": "Specifies the characters to use in order to separate CSV Records", 
                                "displayName": "Record Separator", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Record Separator", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Schema Write Strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.", 
                                            "displayName": "Set 'schema.name' Attribute", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.", 
                                            "displayName": "Set 'avro.schema' Attribute", 
                                            "value": "full-schema-attribute"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given a set of 3 attributes to describe the schema: 'schema.identifier', 'schema.version', and 'schema.protocol.version'. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data.", 
                                            "displayName": "HWX Schema Reference Attributes", 
                                            "value": "hwx-schema-ref-attributes"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile will contain a reference to a schema in the Schema Registry service. The reference is encoded as a single byte indicating the 'protocol version', followed by 8 bytes indicating the schema identifier, and finally 4 bytes indicating the schema version, as per the Hortonworks Schema Registry serializers and deserializers, as found at https://github.com/hortonworks/registry. This will be prepended to each FlowFile. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data.", 
                                            "displayName": "HWX Content-Encoded Schema Reference", 
                                            "value": "hwx-content-encoded-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile will contain a reference to a schema in the Schema Registry service. The reference is encoded as a single 'Magic Byte' followed by 4 bytes representing the identifier of the schema, as outlined at http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html. This will be prepended to each FlowFile. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data. This is based on the encoding used by version 3.2.x of the Confluent Schema Registry.", 
                                            "displayName": "Confluent Schema Registry Reference", 
                                            "value": "confluent-encoded"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Do not add any schema-related information to the FlowFile.", 
                                            "displayName": "Do Not Write Schema", 
                                            "value": "no-schema"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "no-schema", 
                                "description": "Specifies how the schema for a Record should be added to the data.", 
                                "displayName": "Schema Write Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Schema Write Strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Time Format": {
                                "description": "Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).", 
                                "displayName": "Time Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Time Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Timestamp Format": {
                                "description": "Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).", 
                                "displayName": "Timestamp Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Timestamp Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Trim Fields": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "true", 
                                "description": "Whether or not white space should be removed from the beginning and end of fields", 
                                "displayName": "Trim Fields", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Trim Fields", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Value Separator": {
                                "defaultValue": ",", 
                                "description": "The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.", 
                                "displayName": "Value Separator", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Value Separator", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "csvutils-character-set": {
                                "defaultValue": "UTF-8", 
                                "description": "The Character Encoding that is used to encode/decode the CSV file", 
                                "displayName": "Character Set", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csvutils-character-set", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-access-strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.", 
                                            "displayName": "Use 'Schema Name' Property", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The schema used to write records will be the same schema that was given to the Record when the Record was created.", 
                                            "displayName": "Inherit Record Schema", 
                                            "value": "inherit-record-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.", 
                                            "displayName": "Use 'Schema Text' Property", 
                                            "value": "schema-text-property"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "inherit-record-schema", 
                                "description": "Specifies how to obtain the schema that is to be used for interpreting the data.", 
                                "displayName": "Schema Access Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "schema-access-strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-branch": {
                                "description": "Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.", 
                                "displayName": "Schema Branch", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-branch", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-cache": {
                                "allowableValues": [], 
                                "description": "Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.", 
                                "displayName": "Schema Cache", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.serialization.RecordSchemaCacheService", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-cache", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-name": {
                                "defaultValue": "${schema.name}", 
                                "description": "Specifies the name of the schema to lookup in the Schema Registry property", 
                                "displayName": "Schema Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-registry": {
                                "allowableValues": [], 
                                "description": "Specifies the Controller Service to use for the Schema Registry", 
                                "displayName": "Schema Registry", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.schemaregistry.services.SchemaRegistry", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-registry", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-text": {
                                "defaultValue": "${avro.schema}", 
                                "description": "The text of an Avro-formatted Schema", 
                                "displayName": "Schema Text", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-text", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-version": {
                                "description": "Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.", 
                                "displayName": "Schema Version", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-version", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                        "multipleVersionsAvailable": false, 
                        "name": "Csv-writer-CQube", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "CSV Format": "custom", 
                            "Comment Marker": null, 
                            "Date Format": null, 
                            "Escape Character": "\\", 
                            "Include Header Line": "true", 
                            "Include Trailing Delimiter": "false", 
                            "Null String": null, 
                            "Quote Character": "\"", 
                            "Quote Mode": "MINIMAL", 
                            "Record Separator": "\\n", 
                            "Schema Write Strategy": "no-schema", 
                            "Time Format": null, 
                            "Timestamp Format": null, 
                            "Trim Fields": "true", 
                            "Value Separator": ",", 
                            "csvutils-character-set": "UTF-8", 
                            "schema-access-strategy": "inherit-record-schema", 
                            "schema-branch": null, 
                            "schema-cache": null, 
                            "schema-name": "${schema.name}", 
                            "schema-registry": null, 
                            "schema-text": "${avro.schema}", 
                            "schema-version": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "ff719cc6-488e-3f43-76c7-ea13b315a92e", 
                                    "name": "month-wise-attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select month as x_axis,count(attendance) as x_value,'Month-Wise Attendance' as chart_name from student_attendance where attendance = 1 group by month order by month", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "ff719cc6-488e-3f43-76c7-ea13b315a92e", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "7c6e5ba5-bf7d-3355-d03c-93921bac9cc8", 
                                    "name": "Total-Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select gender as x_axis,count(gender) as x_value,'Gender-wise' as chart_name from student_attendance group by gender\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "7c6e5ba5-bf7d-3355-d03c-93921bac9cc8", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "07ee2bbe-39e1-3169-b286-41acb7490a7c", 
                                    "name": "Schools Gender-Wise Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select gender as x_axis,count(attendance) as attribute_1,school_id as x_value,'Schools Gender-wise attenadnce' as chart_name from student_attendance where attendance=1 group by gender,school_id order by school_id,gender\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "07ee2bbe-39e1-3169-b286-41acb7490a7c", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "fd1f286e-a98f-38d7-9f18-10690479cede", 
                                    "name": "Total Schools", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select 'null' as  x_axis,count(distinct(school_id))as x_value,'reports' as chart_name,'Total Schools' as attribute_1 from student_attendance", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "fd1f286e-a98f-38d7-9f18-10690479cede", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "cbf4cb4a-8450-3799-02c0-78a7da7b00a3", 
                                    "name": "Transform-Data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select * from (SELECT school_id,student_id,month,gender, unnest(array['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']) AS Day, unnest(array[day1,day2,day3,day4,day5,day6,day7,day8,day9,day10,day11,day12,day13,day14,day15,day16,day17,day18,day19,day20,day21,day22,day23,day24,day25,day26,day27,day28,day29,day30,day31]) AS attendance FROM student_attendance_tmp) t where t.attendance is not null", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "cbf4cb4a-8450-3799-02c0-78a7da7b00a3", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "f2c12336-d74b-3834-18fe-44095cf05cab", 
                                    "name": "Total students", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select 'null' as x_axis,count(distinct(student_id)) as x_value,'reports' as chart_name,'Total Students' as attribute_1 from student_attendance\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "f2c12336-d74b-3834-18fe-44095cf05cab", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0233368d-5762-3c32-e234-3b8a37cb0728", 
                                    "name": "All-schools-attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select school_id as x_axis,count(attendance) as x_value,'Attendance all schools' as chart_name from student_attendance where attendance=1 group by school_id\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0233368d-5762-3c32-e234-3b8a37cb0728", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "031751cf-7122-34c7-432e-a30425718358", 
                                    "name": "School-Wise-Monthly-Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select month as x_axis,count(attendance) as x_value,school_id as attribute_1,'School-Wise Monthly Attendance' as chart_name from student_attendance where attendance = 1 group by month,school_id order by school_id,month\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "031751cf-7122-34c7-432e-a30425718358", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "946f7e50-dc1e-3d2e-ad15-644abc67ecfa", 
                                    "name": "High_Low-Schools_Attendance", 
                                    "properties": {
                                        "Database Connection Pooling Service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "(select a.value as x_axis,a.school_id as x_value,'reports' as chart_name, 'Least attendance school' as attribute_1 from (select school_id,count(attendance)as value from student_attendance where attendance=1 group by school_id)as a group by a.school_id,a.value having a.value in ((select min(a.value) from (select school_id,count(attendance) as value from student_attendance where attendance=1 group by school_id)as a)))\nUNION\n(select a.value as x_axis,a.school_id as x_value,'reports' as chart_name,'Best attendance school' as attribute_1 from (select school_id,count(attendance)as value from student_attendance where attendance=1 group by school_id)as a group by a.school_id,a.value having a.value in ((select max(a.value) from (select school_id,count(attendance) as value from student_attendance where attendance=1 group by school_id)as a)))", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "946f7e50-dc1e-3d2e-ad15-644abc67ecfa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.csv.CSVRecordSetWriter", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "40b977b0-3a3e-3015-b739-2be86c3137c6"
                    }, 
                    "id": "40b977b0-3a3e-3015-1e81-456c7745b566", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/40b977b0-3a3e-3015-1e81-456c7745b566"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-record-serialization-services-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.serialization.RecordReaderFactory"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "CSV Format": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator", 
                                            "displayName": "Custom Format", 
                                            "value": "custom"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180", 
                                            "displayName": "RFC 4180", 
                                            "value": "rfc-4180"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by Microsoft Excel", 
                                            "displayName": "Microsoft Excel", 
                                            "value": "excel"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data is Tab-Delimited instead of Comma Delimited", 
                                            "displayName": "Tab-Delimited", 
                                            "value": "tdf"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by MySQL", 
                                            "displayName": "MySQL Format", 
                                            "value": "mysql"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command", 
                                            "displayName": "Informix Unload", 
                                            "value": "informix-unload"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled", 
                                            "displayName": "Informix Unload Escape Disabled", 
                                            "value": "informix-unload-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "custom", 
                                "description": "Specifies which \"format\" the CSV data is in, or specifies if custom formatting should be used.", 
                                "displayName": "CSV Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "CSV Format", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Comment Marker": {
                                "description": "The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.", 
                                "displayName": "Comment Marker", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Comment Marker", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Date Format": {
                                "description": "Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).", 
                                "displayName": "Date Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Date Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Escape Character": {
                                "defaultValue": "\\", 
                                "description": "The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used.", 
                                "displayName": "Escape Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Escape Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Null String": {
                                "description": "Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.", 
                                "displayName": "Null String", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Null String", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Quote Character": {
                                "defaultValue": "\"", 
                                "description": "The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.", 
                                "displayName": "Quote Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Quote Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Skip Header Line": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "Specifies whether or not the first line of CSV should be considered a Header or should be considered a record. If the Schema Access Strategy indicates that the columns must be defined in the header, then this property will be ignored, since the header must always be present and won't be processed as a Record. Otherwise, if 'true', then the first line of CSV data will not be processed as a record and if 'false',then the first line will be interpreted as a record.", 
                                "displayName": "Treat First Line as Header", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Skip Header Line", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Time Format": {
                                "description": "Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).", 
                                "displayName": "Time Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Time Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Timestamp Format": {
                                "description": "Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).", 
                                "displayName": "Timestamp Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Timestamp Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Trim Fields": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "true", 
                                "description": "Whether or not white space should be removed from the beginning and end of fields", 
                                "displayName": "Trim Fields", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Trim Fields", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Value Separator": {
                                "defaultValue": ",", 
                                "description": "The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.", 
                                "displayName": "Value Separator", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Value Separator", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "csv-reader-csv-parser": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Apache Commons CSV library.", 
                                            "displayName": "Apache Commons CSV", 
                                            "value": "commons-csv"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Jackson Dataformats library.", 
                                            "displayName": "Jackson CSV", 
                                            "value": "jackson-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "commons-csv", 
                                "description": "Specifies which parser to use to read CSV records. NOTE: Different parsers may support different subsets of functionality and may also exhibit different levels of performance.", 
                                "displayName": "CSV Parser", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csv-reader-csv-parser", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "csvutils-character-set": {
                                "defaultValue": "UTF-8", 
                                "description": "The Character Encoding that is used to encode/decode the CSV file", 
                                "displayName": "Character Set", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csvutils-character-set", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "ignore-csv-header": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If the first line of a CSV is a header, and the configured schema does not match the fields named in the header line, this controls how the Reader will interpret the fields. If this property is true, then the field names mapped to each column are driven only by the configured schema and any fields not in the schema will be ignored. If this property is false, then the field names found in the CSV Header will be used as the names of the fields.", 
                                "displayName": "Ignore CSV Header Column Names", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "ignore-csv-header", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-access-strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.", 
                                            "displayName": "Use 'Schema Name' Property", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.", 
                                            "displayName": "Use 'Schema Text' Property", 
                                            "value": "schema-text-property"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile contains 3 Attributes that will be used to lookup a Schema from the configured Schema Registry: 'schema.identifier', 'schema.version', and 'schema.protocol.version'", 
                                            "displayName": "HWX Schema Reference Attributes", 
                                            "value": "hwx-schema-ref-attributes"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single byte indicating the 'protocol version', followed by 8 bytes indicating the schema identifier, and finally 4 bytes indicating the schema version, as per the Hortonworks Schema Registry serializers and deserializers, found at https://github.com/hortonworks/registry", 
                                            "displayName": "HWX Content-Encoded Schema Reference", 
                                            "value": "hwx-content-encoded-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single 'Magic Byte' followed by 4 bytes representing the identifier of the schema, as outlined at http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html. This is based on version 3.2.x of the Confluent Schema Registry.", 
                                            "displayName": "Confluent Content-Encoded Schema Reference", 
                                            "value": "confluent-encoded"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The first non-comment line of the CSV file is a header line that contains the names of the columns. The schema will be derived by using the column names in the header and assuming that all columns are of type String.", 
                                            "displayName": "Use String Fields From Header", 
                                            "value": "csv-header-derived"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.", 
                                            "displayName": "Infer Schema", 
                                            "value": "infer-schema"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "infer-schema", 
                                "description": "Specifies how to obtain the schema that is to be used for interpreting the data.", 
                                "displayName": "Schema Access Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "schema-access-strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-branch": {
                                "description": "Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.", 
                                "displayName": "Schema Branch", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-branch", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-name": {
                                "defaultValue": "${schema.name}", 
                                "description": "Specifies the name of the schema to lookup in the Schema Registry property", 
                                "displayName": "Schema Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-registry": {
                                "allowableValues": [], 
                                "description": "Specifies the Controller Service to use for the Schema Registry", 
                                "displayName": "Schema Registry", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.schemaregistry.services.SchemaRegistry", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-registry", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-text": {
                                "defaultValue": "${avro.schema}", 
                                "description": "The text of an Avro-formatted Schema", 
                                "displayName": "Schema Text", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-text", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-version": {
                                "description": "Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.", 
                                "displayName": "Schema Version", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-version", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "095ea485-742a-38aa-48d7-4de55bf5a33b", 
                        "multipleVersionsAvailable": false, 
                        "name": "CSVReader-sample-attendance", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "CSV Format": "custom", 
                            "Comment Marker": null, 
                            "Date Format": null, 
                            "Escape Character": "\\", 
                            "Null String": null, 
                            "Quote Character": "\"", 
                            "Skip Header Line": "true", 
                            "Time Format": null, 
                            "Timestamp Format": null, 
                            "Trim Fields": "true", 
                            "Value Separator": ",", 
                            "csv-reader-csv-parser": "commons-csv", 
                            "csvutils-character-set": "UTF-8", 
                            "ignore-csv-header": "false", 
                            "schema-access-strategy": "schema-text-property", 
                            "schema-branch": null, 
                            "schema-name": "${schema.name}", 
                            "schema-registry": null, 
                            "schema-text": "{\n  \"namespace\": \"nifi\",\n  \"name\": \"student_attendance\",\n  \"type\": \"record\",\n  \"fields\": [\n    { \"name\": \"school_id\", \"type\": [\"null\",\"int\"] },\n    { \"name\": \"schoolname\", \"type\": [\"null\",\"string\"] },\n    { \"name\": \"student_id\", \"type\": [\"null\", \"int\"] },\n    { \"name\": \"month\", \"type\": [\"null\",\"string\"] },\n    { \"name\": \"Day\", \"type\": [\"null\",\"int\"] },\n    { \"name\": \"attendance\", \"type\":[\"null\",\"float\"]},\n    { \"name\": \"gender\", \"type\": [\"null\",\"string\"]},\n    { \"name\" : \"leave_reason\", \"type\": [\"null\",\"string\"]}\n      ]\n}", 
                            "schema-version": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "5d59d129-48a7-35d5-a184-4f68f722b7ce", 
                                    "name": "SAVE-TRANSFORMED-TO-PG", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "095ea485-742a-38aa-48d7-4de55bf5a33b", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "student_attendance", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": null, 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "5d59d129-48a7-35d5-a184-4f68f722b7ce", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.csv.CSVReader", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "095ea485-742a-38aa-b200-d691a324ff2e"
                    }, 
                    "id": "095ea485-742a-38aa-48d7-4de55bf5a33b", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/095ea485-742a-38aa-48d7-4de55bf5a33b"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-dbcp-service-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.dbcp.DBCPService"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "Database Connection URL": {
                                "description": "A database connection URL used to connect to a database. May contain database system name, host, port, database name and some parameters. The exact syntax of a database connection URL is specified by your DBMS.", 
                                "displayName": "Database Connection URL", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database Connection URL", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Database Driver Class Name": {
                                "description": "Database driver class name", 
                                "displayName": "Database Driver Class Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database Driver Class Name", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Database User": {
                                "description": "Database user name", 
                                "displayName": "Database User", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Database User", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Max Total Connections": {
                                "defaultValue": "8", 
                                "description": "The maximum number of active connections that can be allocated from this pool at the same time,  or negative for no limit.", 
                                "displayName": "Max Total Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Max Total Connections", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Max Wait Time": {
                                "defaultValue": "500 millis", 
                                "description": "The maximum amount of time that the pool will wait (when there are no available connections)  for a connection to be returned before failing, or -1 to wait indefinitely. ", 
                                "displayName": "Max Wait Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Max Wait Time", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Password": {
                                "description": "The password for the database user", 
                                "displayName": "Password", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Password", 
                                "required": false, 
                                "sensitive": true, 
                                "supportsEl": true
                            }, 
                            "Validation-query": {
                                "description": "Validation query used to validate connections before returning them. When connection is invalid, it get's dropped and new valid connection will be returned. Note!! Using validation might have some performance penalty.", 
                                "displayName": "Validation query", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Validation-query", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "database-driver-locations": {
                                "description": "Comma-separated list of files/folders and/or URLs containing the driver JAR and its dependencies (if any). For example '/var/tmp/mariadb-java-client-1.1.7.jar'", 
                                "displayName": "Database Driver Location(s)", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "database-driver-locations", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-max-conn-lifetime": {
                                "defaultValue": "-1", 
                                "description": "The maximum lifetime in milliseconds of a connection. After this time is exceeded the connection will fail the next activation, passivation or validation test. A value of zero or less means the connection has an infinite lifetime.", 
                                "displayName": "Max Connection Lifetime", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-max-conn-lifetime", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-max-idle-conns": {
                                "defaultValue": "8", 
                                "description": "The maximum number of connections that can remain idle in the pool, without extra ones being released, or negative for no limit.", 
                                "displayName": "Max Idle Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-max-idle-conns", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-min-evictable-idle-time": {
                                "defaultValue": "30 mins", 
                                "description": "The minimum amount of time a connection may sit idle in the pool before it is eligible for eviction.", 
                                "displayName": "Minimum Evictable Idle Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-min-evictable-idle-time", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-min-idle-conns": {
                                "defaultValue": "0", 
                                "description": "The minimum number of connections that can remain idle in the pool, without extra ones being created, or zero to create none.", 
                                "displayName": "Minimum Idle Connections", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-min-idle-conns", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-soft-min-evictable-idle-time": {
                                "defaultValue": "-1", 
                                "description": "The minimum amount of time a connection may sit idle in the pool before it is eligible for eviction by the idle connection evictor, with the extra condition that at least a minimum number of idle connections remain in the pool. When the not-soft version of this option is set to a positive value, it is examined first by the idle connection evictor: when idle connections are visited by the evictor, idle time is first compared against it (without considering the number of idle connections in the pool) and then against this soft option, including the minimum idle connections constraint.", 
                                "displayName": "Soft Minimum Evictable Idle Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-soft-min-evictable-idle-time", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "dbcp-time-between-eviction-runs": {
                                "defaultValue": "-1", 
                                "description": "The number of milliseconds to sleep between runs of the idle connection evictor thread. When non-positive, no idle connection evictor thread will be run.", 
                                "displayName": "Time Between Eviction Runs", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "dbcp-time-between-eviction-runs", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "kerberos-credentials-service": {
                                "allowableValues": [], 
                                "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos", 
                                "displayName": "Kerberos Credentials Service", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "kerberos-credentials-service", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                        "multipleVersionsAvailable": false, 
                        "name": "Postgre-Agg-Dtn", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "Database Connection URL": "#{postgre_connection_url}#{postgre_dtn_db}", 
                            "Database Driver Class Name": "#{postgre_driver_class_name}", 
                            "Database User": "#{postgre_db_user}", 
                            "Max Total Connections": "8", 
                            "Max Wait Time": "500 millis", 
                            "Password": null, 
                            "Validation-query": null, 
                            "database-driver-locations": "#{postgre_driver_dir}", 
                            "dbcp-max-conn-lifetime": "-1", 
                            "dbcp-max-idle-conns": "8", 
                            "dbcp-min-evictable-idle-time": "30 mins", 
                            "dbcp-min-idle-conns": "0", 
                            "dbcp-soft-min-evictable-idle-time": "-1", 
                            "dbcp-time-between-eviction-runs": "-1", 
                            "kerberos-credentials-service": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "5e07f129-a1bc-3c8c-bc9f-c382ac2fc4aa", 
                                    "name": "month-wise-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value from agg_column_chart where chart_name='Month-Wise Attendance' order by to_date(x_axis,'Month')", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "5e07f129-a1bc-3c8c-bc9f-c382ac2fc4aa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "13549825-6769-3200-d471-59bd6ff818fa", 
                                    "name": "school-month-wise-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 as school_id from agg_column_chart where chart_name='School-Wise Monthly Attendance' order by to_date(x_axis,'Month')", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "13549825-6769-3200-d471-59bd6ff818fa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "97587064-f755-3714-dabe-a1c45fb775fa", 
                                    "name": "reports-KPI-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Best attendance school' order by updated_on desc limit 1) union (select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Least attendance school' order by updated_on desc limit 1)  union\n(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Total Schools' order by updated_on desc limit 1) union\n(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Total Students' order by updated_on desc limit 1 );\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "97587064-f755-3714-dabe-a1c45fb775fa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0c3a4f79-5a83-3475-d504-34af9f2a441c", 
                                    "name": "Total-Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='Gender-wise' order by updated_on desc limit 2\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0c3a4f79-5a83-3475-d504-34af9f2a441c", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "284bab5d-122b-3373-a659-e8a8a4154e42", 
                                    "name": "Put_Postgresql-agg", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "b7e4be21-671b-36a3-de07-1d1947fe4ed0", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "agg_column_chart", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": "agg_column_chart.chart_name", 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "284bab5d-122b-3373-a659-e8a8a4154e42", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "3091304f-9a6d-3376-bbc7-7e3429a44776", 
                                    "name": "Schools Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='Schools Gender-wise attenadnce'", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "3091304f-9a6d-3376-bbc7-7e3429a44776", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0022a9a2-49d3-32f2-a965-858fa2955342", 
                                    "name": "All-Schools-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value from agg_column_chart where chart_name='Attendance all schools' order by updated_on desc limit 1", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0022a9a2-49d3-32f2-a965-858fa2955342", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLING", 
                        "type": "org.apache.nifi.dbcp.DBCPConnectionPool", 
                        "validationErrors": [
                            "'Database Driver Location(s)' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database Connection URL' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database Driver Class Name' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group", 
                            "'Database User' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                        ], 
                        "validationStatus": "INVALID", 
                        "versionedComponentId": "3c921b6e-6dc5-3c2e-936c-1be8b6b81d42"
                    }, 
                    "id": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLING", 
                        "validationStatus": "INVALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-record-serialization-services-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.serialization.RecordReaderFactory"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "CSV Format": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator", 
                                            "displayName": "Custom Format", 
                                            "value": "custom"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180", 
                                            "displayName": "RFC 4180", 
                                            "value": "rfc-4180"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by Microsoft Excel", 
                                            "displayName": "Microsoft Excel", 
                                            "value": "excel"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data is Tab-Delimited instead of Comma Delimited", 
                                            "displayName": "Tab-Delimited", 
                                            "value": "tdf"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by MySQL", 
                                            "displayName": "MySQL Format", 
                                            "value": "mysql"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command", 
                                            "displayName": "Informix Unload", 
                                            "value": "informix-unload"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled", 
                                            "displayName": "Informix Unload Escape Disabled", 
                                            "value": "informix-unload-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "custom", 
                                "description": "Specifies which \"format\" the CSV data is in, or specifies if custom formatting should be used.", 
                                "displayName": "CSV Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "CSV Format", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Comment Marker": {
                                "description": "The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.", 
                                "displayName": "Comment Marker", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Comment Marker", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Date Format": {
                                "description": "Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).", 
                                "displayName": "Date Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Date Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Escape Character": {
                                "defaultValue": "\\", 
                                "description": "The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used.", 
                                "displayName": "Escape Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Escape Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Null String": {
                                "description": "Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.", 
                                "displayName": "Null String", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Null String", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Quote Character": {
                                "defaultValue": "\"", 
                                "description": "The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.", 
                                "displayName": "Quote Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Quote Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Skip Header Line": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "Specifies whether or not the first line of CSV should be considered a Header or should be considered a record. If the Schema Access Strategy indicates that the columns must be defined in the header, then this property will be ignored, since the header must always be present and won't be processed as a Record. Otherwise, if 'true', then the first line of CSV data will not be processed as a record and if 'false',then the first line will be interpreted as a record.", 
                                "displayName": "Treat First Line as Header", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Skip Header Line", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Time Format": {
                                "description": "Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).", 
                                "displayName": "Time Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Time Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Timestamp Format": {
                                "description": "Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).", 
                                "displayName": "Timestamp Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Timestamp Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Trim Fields": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "true", 
                                "description": "Whether or not white space should be removed from the beginning and end of fields", 
                                "displayName": "Trim Fields", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Trim Fields", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Value Separator": {
                                "defaultValue": ",", 
                                "description": "The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.", 
                                "displayName": "Value Separator", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Value Separator", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "csv-reader-csv-parser": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Apache Commons CSV library.", 
                                            "displayName": "Apache Commons CSV", 
                                            "value": "commons-csv"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Jackson Dataformats library.", 
                                            "displayName": "Jackson CSV", 
                                            "value": "jackson-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "commons-csv", 
                                "description": "Specifies which parser to use to read CSV records. NOTE: Different parsers may support different subsets of functionality and may also exhibit different levels of performance.", 
                                "displayName": "CSV Parser", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csv-reader-csv-parser", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "csvutils-character-set": {
                                "defaultValue": "UTF-8", 
                                "description": "The Character Encoding that is used to encode/decode the CSV file", 
                                "displayName": "Character Set", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csvutils-character-set", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "ignore-csv-header": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If the first line of a CSV is a header, and the configured schema does not match the fields named in the header line, this controls how the Reader will interpret the fields. If this property is true, then the field names mapped to each column are driven only by the configured schema and any fields not in the schema will be ignored. If this property is false, then the field names found in the CSV Header will be used as the names of the fields.", 
                                "displayName": "Ignore CSV Header Column Names", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "ignore-csv-header", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-access-strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.", 
                                            "displayName": "Use 'Schema Name' Property", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.", 
                                            "displayName": "Use 'Schema Text' Property", 
                                            "value": "schema-text-property"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile contains 3 Attributes that will be used to lookup a Schema from the configured Schema Registry: 'schema.identifier', 'schema.version', and 'schema.protocol.version'", 
                                            "displayName": "HWX Schema Reference Attributes", 
                                            "value": "hwx-schema-ref-attributes"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single byte indicating the 'protocol version', followed by 8 bytes indicating the schema identifier, and finally 4 bytes indicating the schema version, as per the Hortonworks Schema Registry serializers and deserializers, found at https://github.com/hortonworks/registry", 
                                            "displayName": "HWX Content-Encoded Schema Reference", 
                                            "value": "hwx-content-encoded-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single 'Magic Byte' followed by 4 bytes representing the identifier of the schema, as outlined at http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html. This is based on version 3.2.x of the Confluent Schema Registry.", 
                                            "displayName": "Confluent Content-Encoded Schema Reference", 
                                            "value": "confluent-encoded"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The first non-comment line of the CSV file is a header line that contains the names of the columns. The schema will be derived by using the column names in the header and assuming that all columns are of type String.", 
                                            "displayName": "Use String Fields From Header", 
                                            "value": "csv-header-derived"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.", 
                                            "displayName": "Infer Schema", 
                                            "value": "infer-schema"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "infer-schema", 
                                "description": "Specifies how to obtain the schema that is to be used for interpreting the data.", 
                                "displayName": "Schema Access Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "schema-access-strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-branch": {
                                "description": "Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.", 
                                "displayName": "Schema Branch", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-branch", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-name": {
                                "defaultValue": "${schema.name}", 
                                "description": "Specifies the name of the schema to lookup in the Schema Registry property", 
                                "displayName": "Schema Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-registry": {
                                "allowableValues": [], 
                                "description": "Specifies the Controller Service to use for the Schema Registry", 
                                "displayName": "Schema Registry", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.schemaregistry.services.SchemaRegistry", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-registry", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-text": {
                                "defaultValue": "${avro.schema}", 
                                "description": "The text of an Avro-formatted Schema", 
                                "displayName": "Schema Text", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-text", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-version": {
                                "description": "Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.", 
                                "displayName": "Schema Version", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-version", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "b7e4be21-671b-36a3-de07-1d1947fe4ed0", 
                        "multipleVersionsAvailable": false, 
                        "name": "CSVReader-agg", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "CSV Format": "custom", 
                            "Comment Marker": null, 
                            "Date Format": null, 
                            "Escape Character": "\\", 
                            "Null String": null, 
                            "Quote Character": "\"", 
                            "Skip Header Line": "true", 
                            "Time Format": null, 
                            "Timestamp Format": null, 
                            "Trim Fields": "true", 
                            "Value Separator": ",", 
                            "csv-reader-csv-parser": "commons-csv", 
                            "csvutils-character-set": "UTF-8", 
                            "ignore-csv-header": "false", 
                            "schema-access-strategy": "schema-text-property", 
                            "schema-branch": null, 
                            "schema-name": "${schema.name}", 
                            "schema-registry": null, 
                            "schema-text": "{\n  \"namespace\": \"nifi-postgre-agg\",\n  \"name\": \"student_attendance_agg\",\n  \"type\": \"record\",\n  \"fields\": [\n    \n    { \"name\": \"x_axis\", \"type\": [\"null\", \"string\"] },\n    { \"name\": \"x_value\", \"type\": [\"null\",\"string\"] },\n    { \"name\": \"chart_name\", \"type\": [\"null\",\"string\"] },\n    { \"name\": \"y_axis\", \"type\": [\"null\",\"string\"]},\n    { \"name\" : \"y_value\", \"type\": [\"null\",\"string\"]},\n    { \"name\": \"z_axis\", \"type\": [\"null\",\"string\"] },\n    { \"name\": \"z_value\", \"type\":[\"null\",\"string\"]},\n    {\"name\": \"attribute_1\",\"type\":[\"null\",\"string\"]},\n    {\"name\": \"attribute_2\",\"type\":[\"null\",\"string\"]},\n    {\"name\": \"attribute_3\",\"type\":[\"null\",\"string\"]}\n\n  ]\n}\n", 
                            "schema-version": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "284bab5d-122b-3373-a659-e8a8a4154e42", 
                                    "name": "Put_Postgresql-agg", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "b7e4be21-671b-36a3-de07-1d1947fe4ed0", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "agg_column_chart", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": "agg_column_chart.chart_name", 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "284bab5d-122b-3373-a659-e8a8a4154e42", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.csv.CSVReader", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "b7e4be21-671b-36a3-8073-5672a0584638"
                    }, 
                    "id": "b7e4be21-671b-36a3-de07-1d1947fe4ed0", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-record-serialization-services-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.serialization.RecordReaderFactory"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "CSV Format": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The format of the CSV is configured by using the properties of this Controller Service, such as Value Separator", 
                                            "displayName": "Custom Format", 
                                            "value": "custom"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the RFC 4180 Specification defined at https://tools.ietf.org/html/rfc4180", 
                                            "displayName": "RFC 4180", 
                                            "value": "rfc-4180"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by Microsoft Excel", 
                                            "displayName": "Microsoft Excel", 
                                            "value": "excel"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data is Tab-Delimited instead of Comma Delimited", 
                                            "displayName": "Tab-Delimited", 
                                            "value": "tdf"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "CSV data follows the format used by MySQL", 
                                            "displayName": "MySQL Format", 
                                            "value": "mysql"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command", 
                                            "displayName": "Informix Unload", 
                                            "value": "informix-unload"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The format used by Informix when issuing the UNLOAD TO file_name command with escaping disabled", 
                                            "displayName": "Informix Unload Escape Disabled", 
                                            "value": "informix-unload-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "custom", 
                                "description": "Specifies which \"format\" the CSV data is in, or specifies if custom formatting should be used.", 
                                "displayName": "CSV Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "CSV Format", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Comment Marker": {
                                "description": "The character that is used to denote the start of a comment. Any line that begins with this comment will be ignored.", 
                                "displayName": "Comment Marker", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Comment Marker", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Date Format": {
                                "description": "Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).", 
                                "displayName": "Date Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Date Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Escape Character": {
                                "defaultValue": "\\", 
                                "description": "The character that is used to escape characters that would otherwise have a specific meaning to the CSV Parser. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Escape Character at runtime, then it will be skipped and the default Escape Character will be used.", 
                                "displayName": "Escape Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Escape Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Null String": {
                                "description": "Specifies a String that, if present as a value in the CSV, should be considered a null field instead of using the literal value.", 
                                "displayName": "Null String", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Null String", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Quote Character": {
                                "defaultValue": "\"", 
                                "description": "The character that is used to quote values so that escape characters do not have to be used. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Quote Character at runtime, then it will be skipped and the default Quote Character will be used.", 
                                "displayName": "Quote Character", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Quote Character", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "Skip Header Line": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "Specifies whether or not the first line of CSV should be considered a Header or should be considered a record. If the Schema Access Strategy indicates that the columns must be defined in the header, then this property will be ignored, since the header must always be present and won't be processed as a Record. Otherwise, if 'true', then the first line of CSV data will not be processed as a record and if 'false',then the first line will be interpreted as a record.", 
                                "displayName": "Treat First Line as Header", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Skip Header Line", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Time Format": {
                                "description": "Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).", 
                                "displayName": "Time Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Time Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Timestamp Format": {
                                "description": "Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).", 
                                "displayName": "Timestamp Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Timestamp Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Trim Fields": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "true", 
                                "description": "Whether or not white space should be removed from the beginning and end of fields", 
                                "displayName": "Trim Fields", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Trim Fields", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Value Separator": {
                                "defaultValue": ",", 
                                "description": "The character that is used to separate values/fields in a CSV Record. If the property has been specified via Expression Language but the expression gets evaluated to an invalid Value Separator at runtime, then it will be skipped and the default Value Separator will be used.", 
                                "displayName": "Value Separator", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "Value Separator", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "csv-reader-csv-parser": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Apache Commons CSV library.", 
                                            "displayName": "Apache Commons CSV", 
                                            "value": "commons-csv"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The CSV parser implementation from the Jackson Dataformats library.", 
                                            "displayName": "Jackson CSV", 
                                            "value": "jackson-csv"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "commons-csv", 
                                "description": "Specifies which parser to use to read CSV records. NOTE: Different parsers may support different subsets of functionality and may also exhibit different levels of performance.", 
                                "displayName": "CSV Parser", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csv-reader-csv-parser", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "csvutils-character-set": {
                                "defaultValue": "UTF-8", 
                                "description": "The Character Encoding that is used to encode/decode the CSV file", 
                                "displayName": "Character Set", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "csvutils-character-set", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "ignore-csv-header": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If the first line of a CSV is a header, and the configured schema does not match the fields named in the header line, this controls how the Reader will interpret the fields. If this property is true, then the field names mapped to each column are driven only by the configured schema and any fields not in the schema will be ignored. If this property is false, then the field names found in the CSV Header will be used as the names of the fields.", 
                                "displayName": "Ignore CSV Header Column Names", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "ignore-csv-header", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-access-strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.", 
                                            "displayName": "Use 'Schema Name' Property", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.", 
                                            "displayName": "Use 'Schema Text' Property", 
                                            "value": "schema-text-property"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile contains 3 Attributes that will be used to lookup a Schema from the configured Schema Registry: 'schema.identifier', 'schema.version', and 'schema.protocol.version'", 
                                            "displayName": "HWX Schema Reference Attributes", 
                                            "value": "hwx-schema-ref-attributes"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single byte indicating the 'protocol version', followed by 8 bytes indicating the schema identifier, and finally 4 bytes indicating the schema version, as per the Hortonworks Schema Registry serializers and deserializers, found at https://github.com/hortonworks/registry", 
                                            "displayName": "HWX Content-Encoded Schema Reference", 
                                            "value": "hwx-content-encoded-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile contains a reference to a schema in the Schema Registry service. The reference is encoded as a single 'Magic Byte' followed by 4 bytes representing the identifier of the schema, as outlined at http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html. This is based on version 3.2.x of the Confluent Schema Registry.", 
                                            "displayName": "Confluent Content-Encoded Schema Reference", 
                                            "value": "confluent-encoded"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The first non-comment line of the CSV file is a header line that contains the names of the columns. The schema will be derived by using the column names in the header and assuming that all columns are of type String.", 
                                            "displayName": "Use String Fields From Header", 
                                            "value": "csv-header-derived"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The Schema of the data will be inferred automatically when the data is read. See component Usage and Additional Details for information about how the schema is inferred.", 
                                            "displayName": "Infer Schema", 
                                            "value": "infer-schema"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "infer-schema", 
                                "description": "Specifies how to obtain the schema that is to be used for interpreting the data.", 
                                "displayName": "Schema Access Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "schema-access-strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-branch": {
                                "description": "Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.", 
                                "displayName": "Schema Branch", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-branch", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-name": {
                                "defaultValue": "${schema.name}", 
                                "description": "Specifies the name of the schema to lookup in the Schema Registry property", 
                                "displayName": "Schema Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-registry": {
                                "allowableValues": [], 
                                "description": "Specifies the Controller Service to use for the Schema Registry", 
                                "displayName": "Schema Registry", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.schemaregistry.services.SchemaRegistry", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-registry", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-text": {
                                "defaultValue": "${avro.schema}", 
                                "description": "The text of an Avro-formatted Schema", 
                                "displayName": "Schema Text", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-text", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-version": {
                                "description": "Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.", 
                                "displayName": "Schema Version", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-version", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0", 
                        "multipleVersionsAvailable": false, 
                        "name": "CSVReader-Source", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "CSV Format": "custom", 
                            "Comment Marker": null, 
                            "Date Format": null, 
                            "Escape Character": "\\", 
                            "Null String": null, 
                            "Quote Character": "\"", 
                            "Skip Header Line": "true", 
                            "Time Format": null, 
                            "Timestamp Format": null, 
                            "Trim Fields": "true", 
                            "Value Separator": ",", 
                            "csv-reader-csv-parser": "commons-csv", 
                            "csvutils-character-set": "UTF-8", 
                            "ignore-csv-header": "false", 
                            "schema-access-strategy": "infer-schema", 
                            "schema-branch": null, 
                            "schema-name": "${schema.name}", 
                            "schema-registry": null, 
                            "schema-text": "${avro.schema}", 
                            "schema-version": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "put-db-record-allow-multiple-statements": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates whether to split the field value by a semicolon and execute each statement separately. If any statement causes an error, the entire set of statements will be rolled back. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Allow Multiple SQL Statements", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-allow-multiple-statements", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-catalog-name": {
                                            "description": "The name of the catalog that the statement should update. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Catalog Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-catalog-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-dcbp-service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain a connection to the database for sending records.", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-dcbp-service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-field-containing-sql": {
                                            "description": "If the Statement Type is 'SQL' (as set in the statement.type attribute), this field indicates which field in the record(s) contains the SQL statement to execute. The value of the field must be a single SQL statement. If the Statement Type is not 'SQL', this field is ignored.", 
                                            "displayName": "Field Containing SQL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-field-containing-sql", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-max-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "Specifies maximum batch size for INSERT and UPDATE statements. This parameter has no effect for other statements specified in 'Statement Type'. Zero means the batch size is not limited.", 
                                            "displayName": "Maximum Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-max-batch-size", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-query-timeout": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL statement , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "put-db-record-query-timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-quoted-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause all column names to be quoted, allowing you to use reserved words as column names in your tables.", 
                                            "displayName": "Quote Column Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-quoted-table-identifiers": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Enabling this option will cause the table name to be quoted to support the use of special characters in the table name.", 
                                            "displayName": "Quote Table Identifiers", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-quoted-table-identifiers", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-record-reader": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-sample-attendance", 
                                                        "value": "095ea485-742a-38aa-48d7-4de55bf5a33b"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-agg", 
                                                        "value": "b7e4be21-671b-36a3-de07-1d1947fe4ed0"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "CSVReader-Source", 
                                                        "value": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for parsing incoming data and determining the data's schema.", 
                                            "displayName": "Record Reader", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordReaderFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "put-db-record-record-reader", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-schema-name": {
                                            "description": "The name of the schema that the table belongs to. This may not apply for the database that you are updating. In this case, leave the field empty", 
                                            "displayName": "Schema Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-schema-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-statement-type": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "UPDATE", 
                                                        "value": "UPDATE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "INSERT", 
                                                        "value": "INSERT"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DELETE", 
                                                        "value": "DELETE"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Use statement.type Attribute", 
                                                        "value": "Use statement.type Attribute"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the type of SQL Statement to generate. If 'Use statement.type Attribute' is chosen, then the value is taken from the statement.type attribute in the FlowFile. The 'Use statement.type Attribute' option is the only one that allows the 'SQL' statement type. If 'SQL' is specified, the value of the field specified by the 'Field Containing SQL' property is expected to be a valid SQL statement on the target database, and will be executed as-is.", 
                                            "displayName": "Statement Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-statement-type", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-table-name": {
                                            "description": "The name of the table that the statement should affect.", 
                                            "displayName": "Table Name", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-table-name", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "put-db-record-translate-field-names": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "true", 
                                            "description": "If true, the Processor will attempt to translate field names into the appropriate column names for the table specified. If false, the field names must match the column names exactly, or the column will not be updated", 
                                            "displayName": "Translate Field Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-translate-field-names", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-column-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  No notification will be logged", 
                                                        "displayName": "Ignore Unmatched Columns", 
                                                        "value": "Ignore Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "Any column in the database that does not have a field in the document will be assumed to not be required.  A warning will be logged", 
                                                        "displayName": "Warn on Unmatched Columns", 
                                                        "value": "Warn on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "A flow will fail if any column in the database that does not have a field in the document.  An error will be logged", 
                                                        "displayName": "Fail on Unmatched Columns", 
                                                        "value": "Fail on Unmatched Columns"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Fail on Unmatched Columns", 
                                            "description": "If an incoming record does not have a field mapping for all of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Column Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-column-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-unmatched-field-behavior": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "Any field in the document that cannot be mapped to a column in the database is ignored", 
                                                        "displayName": "Ignore Unmatched Fields", 
                                                        "value": "Ignore Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "If the document has any field that cannot be mapped to a column in the database, the FlowFile will be routed to the failure relationship", 
                                                        "displayName": "Fail on Unmatched Fields", 
                                                        "value": "Fail on Unmatched Fields"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Ignore Unmatched Fields", 
                                            "description": "If an incoming record has a field that does not map to any of the database table's columns, this property specifies how to handle the situation", 
                                            "displayName": "Unmatched Field Behavior", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "put-db-record-unmatched-field-behavior", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "put-db-record-update-keys": {
                                            "description": "A comma-separated list of column names that uniquely identifies a row in the database for UPDATE statements. If the Statement Type is UPDATE and this property is not set, the table's Primary Keys are used. In this case, if no Primary Key exists, the conversion to SQL will fail if Unmatched Column Behaviour is set to FAIL. This property is ignored if the Statement Type is INSERT", 
                                            "displayName": "Update Keys", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "put-db-record-update-keys", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "rollback-on-failure": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Specify how to handle error. By default (false), if an error occurs while processing a FlowFile, the FlowFile will be routed to 'failure' or 'retry' relationship based on error type, and processor can continue with next FlowFile. Instead, you may want to rollback currently processed FlowFiles and stop further processing immediately. In that case, you can do so by enabling this 'Rollback On Failure' property.  If enabled, failed FlowFiles will stay in the input relationship without penalizing it and being processed repeatedly until it gets processed successfully or removed by other means. It is important to set adequate 'Yield Duration' to avoid retrying too frequently.", 
                                            "displayName": "Rollback On Failure", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "rollback-on-failure", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "table-schema-cache-size": {
                                            "defaultValue": "100", 
                                            "description": "Specifies how many Table Schemas should be cached", 
                                            "displayName": "Table Schema Cache Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "table-schema-cache-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "2b4ba126-6640-3197-8cb9-012c266bbdee", 
                                    "name": "SAVE-SOURCE-TO-PG", 
                                    "properties": {
                                        "put-db-record-allow-multiple-statements": "false", 
                                        "put-db-record-catalog-name": null, 
                                        "put-db-record-dcbp-service": "cd1c6111-fd44-386b-10f7-e69ba601cb95", 
                                        "put-db-record-field-containing-sql": null, 
                                        "put-db-record-max-batch-size": "0", 
                                        "put-db-record-query-timeout": "0 seconds", 
                                        "put-db-record-quoted-identifiers": "false", 
                                        "put-db-record-quoted-table-identifiers": "false", 
                                        "put-db-record-record-reader": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0", 
                                        "put-db-record-schema-name": null, 
                                        "put-db-record-statement-type": "INSERT", 
                                        "put-db-record-table-name": "student_attendance_tmp", 
                                        "put-db-record-translate-field-names": "true", 
                                        "put-db-record-unmatched-column-behavior": "Fail on Unmatched Columns", 
                                        "put-db-record-unmatched-field-behavior": "Ignore Unmatched Fields", 
                                        "put-db-record-update-keys": null, 
                                        "rollback-on-failure": "false", 
                                        "table-schema-cache-size": "100"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutDatabaseRecord"
                                }, 
                                "id": "2b4ba126-6640-3197-8cb9-012c266bbdee", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.csv.CSVReader", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "f13abd3a-e2eb-352b-bdbd-b57ef894ec8b"
                    }, 
                    "id": "f13abd3a-e2eb-352b-9ab5-feb6b0da71a0", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/f13abd3a-e2eb-352b-9ab5-feb6b0da71a0"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-record-serialization-services-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.serialization.RecordSetWriterFactory"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "Date Format": {
                                "description": "Specifies the format to use when reading/writing Date fields. If not specified, Date fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters, as in 01/01/2017).", 
                                "displayName": "Date Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Date Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Pretty Print JSON": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "Specifies whether or not the JSON should be pretty printed", 
                                "displayName": "Pretty Print JSON", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Pretty Print JSON", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Schema Write Strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given an attribute named 'schema.name' and this attribute will indicate the name of the schema in the Schema Registry. Note that ifthe schema for a record is not obtained from a Schema Registry, then no attribute will be added.", 
                                            "displayName": "Set 'schema.name' Attribute", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given an attribute named 'avro.schema' and this attribute will contain the Avro Schema that describes the records in the FlowFile. The contents of the FlowFile need not be Avro, but the text of the schema will be used.", 
                                            "displayName": "Set 'avro.schema' Attribute", 
                                            "value": "full-schema-attribute"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The FlowFile will be given a set of 3 attributes to describe the schema: 'schema.identifier', 'schema.version', and 'schema.protocol.version'. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data.", 
                                            "displayName": "HWX Schema Reference Attributes", 
                                            "value": "hwx-schema-ref-attributes"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile will contain a reference to a schema in the Schema Registry service. The reference is encoded as a single byte indicating the 'protocol version', followed by 8 bytes indicating the schema identifier, and finally 4 bytes indicating the schema version, as per the Hortonworks Schema Registry serializers and deserializers, as found at https://github.com/hortonworks/registry. This will be prepended to each FlowFile. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data.", 
                                            "displayName": "HWX Content-Encoded Schema Reference", 
                                            "value": "hwx-content-encoded-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The content of the FlowFile will contain a reference to a schema in the Schema Registry service. The reference is encoded as a single 'Magic Byte' followed by 4 bytes representing the identifier of the schema, as outlined at http://docs.confluent.io/current/schema-registry/docs/serializer-formatter.html. This will be prepended to each FlowFile. Note that if the schema for a record does not contain the necessary identifier and version, an Exception will be thrown when attempting to write the data. This is based on the encoding used by version 3.2.x of the Confluent Schema Registry.", 
                                            "displayName": "Confluent Schema Registry Reference", 
                                            "value": "confluent-encoded"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Do not add any schema-related information to the FlowFile.", 
                                            "displayName": "Do Not Write Schema", 
                                            "value": "no-schema"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "no-schema", 
                                "description": "Specifies how the schema for a Record should be added to the data.", 
                                "displayName": "Schema Write Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Schema Write Strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Time Format": {
                                "description": "Specifies the format to use when reading/writing Time fields. If not specified, Time fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, HH:mm:ss for a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 18:04:15).", 
                                "displayName": "Time Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Time Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Timestamp Format": {
                                "description": "Specifies the format to use when reading/writing Timestamp fields. If not specified, Timestamp fields will be assumed to be number of milliseconds since epoch (Midnight, Jan 1, 1970 GMT). If specified, the value must match the Java Simple Date Format (for example, MM/dd/yyyy HH:mm:ss for a two-digit month, followed by a two-digit day, followed by a four-digit year, all separated by '/' characters; and then followed by a two-digit hour in 24-hour format, followed by a two-digit minute, followed by a two-digit second, all separated by ':' characters, as in 01/01/2017 18:04:15).", 
                                "displayName": "Timestamp Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Timestamp Format", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "compression-format": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "none", 
                                            "value": "none"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "gzip", 
                                            "value": "gzip"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "bzip2", 
                                            "value": "bzip2"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "xz-lzma2", 
                                            "value": "xz-lzma2"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "snappy", 
                                            "value": "snappy"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "snappy framed", 
                                            "value": "snappy framed"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "none", 
                                "description": "The compression format to use. Valid values are: GZIP, BZIP2, XZ-LZMA2, LZMA, Snappy, and Snappy Framed", 
                                "displayName": "Compression Format", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "compression-format", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "compression-level": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "0", 
                                            "value": "0"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "1", 
                                            "value": "1"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "2", 
                                            "value": "2"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "3", 
                                            "value": "3"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "4", 
                                            "value": "4"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "5", 
                                            "value": "5"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "6", 
                                            "value": "6"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "7", 
                                            "value": "7"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "8", 
                                            "value": "8"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "9", 
                                            "value": "9"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "1", 
                                "description": "The compression level to use; this is valid only when using GZIP compression. A lower value results in faster processing but less compression; a value of 0 indicates no compression but simply archiving", 
                                "displayName": "Compression Level", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "compression-level", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "output-grouping": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "Output records as a JSON array", 
                                            "displayName": "Array", 
                                            "value": "output-array"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Output records with one JSON object per line, delimited by a newline character", 
                                            "displayName": "One Line Per Object", 
                                            "value": "output-oneline"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "output-array", 
                                "description": "Specifies how the writer should output the JSON records (as an array or one object per line, e.g.) Note that if 'One Line Per Object' is selected, then Pretty Print JSON must be false.", 
                                "displayName": "Output Grouping", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "output-grouping", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-access-strategy": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "The name of the Schema to use is specified by the 'Schema Name' Property. The value of this property is used to lookup the Schema in the configured Schema Registry service.", 
                                            "displayName": "Use 'Schema Name' Property", 
                                            "value": "schema-name"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The schema used to write records will be the same schema that was given to the Record when the Record was created.", 
                                            "displayName": "Inherit Record Schema", 
                                            "value": "inherit-record-schema"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "The text of the Schema itself is specified by the 'Schema Text' Property. The value of this property must be a valid Avro Schema. If Expression Language is used, the value of the 'Schema Text' property must be valid after substituting the expressions.", 
                                            "displayName": "Use 'Schema Text' Property", 
                                            "value": "schema-text-property"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "inherit-record-schema", 
                                "description": "Specifies how to obtain the schema that is to be used for interpreting the data.", 
                                "displayName": "Schema Access Strategy", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "schema-access-strategy", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-branch": {
                                "description": "Specifies the name of the branch to use when looking up the schema in the Schema Registry property. If the chosen Schema Registry does not support branching, this value will be ignored.", 
                                "displayName": "Schema Branch", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-branch", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-cache": {
                                "allowableValues": [], 
                                "description": "Specifies a Schema Cache to add the Record Schema to so that Record Readers can quickly lookup the schema.", 
                                "displayName": "Schema Cache", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.serialization.RecordSchemaCacheService", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-cache", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-name": {
                                "defaultValue": "${schema.name}", 
                                "description": "Specifies the name of the schema to lookup in the Schema Registry property", 
                                "displayName": "Schema Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-registry": {
                                "allowableValues": [], 
                                "description": "Specifies the Controller Service to use for the Schema Registry", 
                                "displayName": "Schema Registry", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "identifiesControllerService": "org.apache.nifi.schemaregistry.services.SchemaRegistry", 
                                "identifiesControllerServiceBundle": {
                                    "artifact": "nifi-standard-services-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "name": "schema-registry", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "schema-text": {
                                "defaultValue": "${avro.schema}", 
                                "description": "The text of an Avro-formatted Schema", 
                                "displayName": "Schema Text", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-text", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "schema-version": {
                                "description": "Specifies the version of the schema to lookup in the Schema Registry. If not specified then the latest version of the schema will be retrieved.", 
                                "displayName": "Schema Version", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                "name": "schema-version", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }, 
                            "suppress-nulls": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "description": "Fields that are missing (present in the schema but not in the record), or that have a value of null, will be written out as a null value", 
                                            "displayName": "Never Suppress", 
                                            "value": "never-suppress"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "Fields that are missing (present in the schema but not in the record), or that have a value of null, will not be written out", 
                                            "displayName": "Always Suppress", 
                                            "value": "always-suppress"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "description": "When a field has a value of null, it will be written out. However, if a field is defined in the schema and not present in the record, the field will not be written out.", 
                                            "displayName": "Suppress Missing Values", 
                                            "value": "suppress-missing"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "never-suppress", 
                                "description": "Specifies how the writer should handle a null field", 
                                "displayName": "Suppress Null Values", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "suppress-nulls", 
                                "required": true, 
                                "sensitive": false, 
                                "supportsEl": false
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                        "multipleVersionsAvailable": false, 
                        "name": "Json-writer-CQube", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "Date Format": null, 
                            "Pretty Print JSON": "false", 
                            "Schema Write Strategy": "no-schema", 
                            "Time Format": null, 
                            "Timestamp Format": null, 
                            "compression-format": "none", 
                            "compression-level": "1", 
                            "output-grouping": "output-array", 
                            "schema-access-strategy": "inherit-record-schema", 
                            "schema-branch": null, 
                            "schema-cache": null, 
                            "schema-name": "${schema.name}", 
                            "schema-registry": null, 
                            "schema-text": "${avro.schema}", 
                            "schema-version": null, 
                            "suppress-nulls": "never-suppress"
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "5e07f129-a1bc-3c8c-bc9f-c382ac2fc4aa", 
                                    "name": "month-wise-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value from agg_column_chart where chart_name='Month-Wise Attendance' order by to_date(x_axis,'Month')", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "5e07f129-a1bc-3c8c-bc9f-c382ac2fc4aa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "13549825-6769-3200-d471-59bd6ff818fa", 
                                    "name": "school-month-wise-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 as school_id from agg_column_chart where chart_name='School-Wise Monthly Attendance' order by to_date(x_axis,'Month')", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "13549825-6769-3200-d471-59bd6ff818fa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "97587064-f755-3714-dabe-a1c45fb775fa", 
                                    "name": "reports-KPI-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Best attendance school' order by updated_on desc limit 1) union (select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Least attendance school' order by updated_on desc limit 1)  union\n(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Total Schools' order by updated_on desc limit 1) union\n(select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='reports' and attribute_1 ='Total Students' order by updated_on desc limit 1 );\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "97587064-f755-3714-dabe-a1c45fb775fa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0c3a4f79-5a83-3475-d504-34af9f2a441c", 
                                    "name": "Total-Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='Gender-wise' order by updated_on desc limit 2\n", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0c3a4f79-5a83-3475-d504-34af9f2a441c", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "3091304f-9a6d-3376-bbc7-7e3429a44776", 
                                    "name": "Schools Gender-wise", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value,attribute_1 from agg_column_chart where chart_name='Schools Gender-wise attenadnce'", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "3091304f-9a6d-3376-bbc7-7e3429a44776", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "Database Connection Pooling Service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Postgre-Agg-Dtn", 
                                                        "value": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "postgresql-CQube-Source", 
                                                        "value": "cd1c6111-fd44-386b-10f7-e69ba601cb95"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain connection to database", 
                                            "displayName": "Database Connection Pooling Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.dbcp.DBCPService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "Database Connection Pooling Service", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Max Wait Time": {
                                            "defaultValue": "0 seconds", 
                                            "description": "The maximum amount of time allowed for a running SQL select query  , zero means there is no limit. Max time less than 1 second will be equal to zero.", 
                                            "displayName": "Max Wait Time", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Max Wait Time", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SQL select query": {
                                            "description": "The SQL select query to execute. The query can be empty, a constant value, or built from attributes using Expression Language. If this property is specified, it will be used regardless of the content of incoming flowfiles. If this property is empty, the content of the incoming flow file is expected to contain a valid SQL select query, to be issued by the processor to the database. Note that Expression Language is not evaluated for flow file contents.", 
                                            "displayName": "SQL select query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "SQL select query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "dbf-user-logical-types": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to use Avro Logical Types for DECIMAL/NUMBER, DATE, TIME and TIMESTAMP columns. If disabled, written as string. If enabled, Logical types are used and written as its underlying type, specifically, DECIMAL/NUMBER as logical 'decimal': written as bytes with additional precision and scale meta data, DATE as logical 'date-millis': written as int denoting days since Unix epoch (1970-01-01), TIME as logical 'time-millis': written as int denoting milliseconds since Unix epoch, and TIMESTAMP as logical 'timestamp-millis': written as long denoting milliseconds since Unix epoch. If a reader of written Avro records also knows these logical types, then these values can be deserialized with more context depending on reader implementation.", 
                                            "displayName": "Use Avro Logical Types", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "dbf-user-logical-types", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esql-max-rows": {
                                            "defaultValue": "0", 
                                            "description": "The maximum number of result rows that will be included in a single FlowFile. This will allow you to break up very large result sets into multiple FlowFiles. If the value specified is zero, then all rows are returned in a single FlowFile.", 
                                            "displayName": "Max Rows Per Flow File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-max-rows", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esql-output-batch-size": {
                                            "defaultValue": "0", 
                                            "description": "The number of output FlowFiles to queue before committing the process session. When set to zero, the session will be committed when all result set rows have been processed and the output FlowFiles are ready for transfer to the downstream relationship. For large result sets, this can cause a large burst of FlowFiles to be transferred at the end of processor execution. If this property is set, then when the specified number of FlowFiles are ready for transfer, then the session will be committed, thus releasing the FlowFiles to the downstream relationship. NOTE: The fragment.count attribute will not be set on FlowFiles when this property is set.", 
                                            "displayName": "Output Batch Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "esql-output-batch-size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "esqlrecord-normalize": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "true", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "false", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "Whether to change characters in column names. For example, colons and periods will be changed to underscores.", 
                                            "displayName": "Normalize Table/Column Names", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "esqlrecord-normalize", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "esqlrecord-record-writer": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Csv-writer-CQube", 
                                                        "value": "40b977b0-3a3e-3015-1e81-456c7745b566"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Json-writer-CQube", 
                                                        "value": "c96e7d53-d3b7-317f-244a-f234079bbff4"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "Specifies the Controller Service to use for writing results to a FlowFile. The Record Writer may use Inherit Schema to emulate the inferred schema behavior, i.e. an explicit schema need not be defined in the writer, and will be supplied by the same logic used to infer the schema from the column types.", 
                                            "displayName": "Record Writer", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.serialization.RecordSetWriterFactory", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "esqlrecord-record-writer", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "sql-post-query": {
                                            "description": "A semicolon-delimited list of queries executed after the main SQL query is executed. Example like setting session properties after main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Post-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-post-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "sql-pre-query": {
                                            "description": "A semicolon-delimited list of queries executed before the main SQL query is executed. For example, set session properties before main query. Results/outputs from these queries will be suppressed if there are no errors.", 
                                            "displayName": "SQL Pre-Query", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "sql-pre-query", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0022a9a2-49d3-32f2-a965-858fa2955342", 
                                    "name": "All-Schools-chart-data", 
                                    "properties": {
                                        "Database Connection Pooling Service": "3c921b6e-6dc5-3c2e-ac73-3013eed313e2", 
                                        "Max Wait Time": "0 seconds", 
                                        "SQL select query": "select chart_name,x_axis,x_value from agg_column_chart where chart_name='Attendance all schools' order by updated_on desc limit 1", 
                                        "dbf-user-logical-types": "false", 
                                        "esql-max-rows": "0", 
                                        "esql-output-batch-size": "0", 
                                        "esqlrecord-normalize": "false", 
                                        "esqlrecord-record-writer": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                                        "sql-post-query": null, 
                                        "sql-pre-query": null
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "ExecuteSQLRecord"
                                }, 
                                "id": "0022a9a2-49d3-32f2-a965-858fa2955342", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.json.JsonRecordSetWriter", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "c96e7d53-d3b7-317f-a93e-771409353376"
                    }, 
                    "id": "c96e7d53-d3b7-317f-244a-f234079bbff4", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/c96e7d53-d3b7-317f-244a-f234079bbff4"
                }, 
                {
                    "bulletins": [], 
                    "component": {
                        "bundle": {
                            "artifact": "nifi-aws-nar", 
                            "group": "org.apache.nifi", 
                            "version": "1.10.0"
                        }, 
                        "comments": "", 
                        "controllerServiceApis": [
                            {
                                "bundle": {
                                    "artifact": "nifi-aws-service-api-nar", 
                                    "group": "org.apache.nifi", 
                                    "version": "1.10.0"
                                }, 
                                "type": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                            }
                        ], 
                        "deprecated": false, 
                        "descriptors": {
                            "Access Key": {
                                "description": "", 
                                "displayName": "Access Key ID", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Access Key", 
                                "required": false, 
                                "sensitive": true, 
                                "supportsEl": true
                            }, 
                            "Assume Role ARN": {
                                "description": "The AWS Role ARN for cross account access. This is used in conjunction with role name and session timeout", 
                                "displayName": "Assume Role ARN", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Assume Role ARN", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Assume Role Session Name": {
                                "description": "The AWS Role Name for cross account access. This is used in conjunction with role ARN and session time out", 
                                "displayName": "Assume Role Session Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Assume Role Session Name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Credentials File": {
                                "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                "displayName": "Credentials File", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Credentials File", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "Secret Key": {
                                "description": "", 
                                "displayName": "Secret Access Key", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "Secret Key", 
                                "required": false, 
                                "sensitive": true, 
                                "supportsEl": true
                            }, 
                            "Session Time": {
                                "defaultValue": "3600", 
                                "description": "Session time for role based session (between 900 and 3600 seconds). This is used in conjunction with role ARN and name", 
                                "displayName": "Session Time", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "Session Time", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "anonymous-credentials": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If true, uses Anonymous credentials", 
                                "displayName": "Use Anonymous Credentials", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "anonymous-credentials", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "assume-role-external-id": {
                                "description": "External ID for cross-account access. This is used in conjunction with role arn, role name, and optional session time out", 
                                "displayName": "Assume Role External ID", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "assume-role-external-id", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "assume-role-proxy-host": {
                                "description": "Proxy host for cross-account access, if needed within your environment. This will configure a proxy to request for temporary access keys into another AWS account", 
                                "displayName": "Assume Role Proxy Host", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "assume-role-proxy-host", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "assume-role-proxy-port": {
                                "description": "Proxy pot for cross-account access, if needed within your environment. This will configure a proxy to request for temporary access keys into another AWS account", 
                                "displayName": "Assume Role Proxy Port", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "assume-role-proxy-port", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "default-credentials": {
                                "allowableValues": [
                                    {
                                        "allowableValue": {
                                            "displayName": "true", 
                                            "value": "true"
                                        }, 
                                        "canRead": true
                                    }, 
                                    {
                                        "allowableValue": {
                                            "displayName": "false", 
                                            "value": "false"
                                        }, 
                                        "canRead": true
                                    }
                                ], 
                                "defaultValue": "false", 
                                "description": "If true, uses the Default Credential chain, including EC2 instance profiles or roles, environment variables, default user credentials, etc.", 
                                "displayName": "Use Default Credentials", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Not Supported", 
                                "name": "default-credentials", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": false
                            }, 
                            "profile-name": {
                                "description": "The AWS profile name for credentials from the profile configuration file.", 
                                "displayName": "Profile Name", 
                                "dynamic": false, 
                                "expressionLanguageScope": "Variable Registry Only", 
                                "name": "profile-name", 
                                "required": false, 
                                "sensitive": false, 
                                "supportsEl": true
                            }
                        }, 
                        "extensionMissing": false, 
                        "id": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                        "multipleVersionsAvailable": false, 
                        "name": "AWS-S3-cred", 
                        "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                        "persistsState": false, 
                        "properties": {
                            "Access Key": null, 
                            "Assume Role ARN": null, 
                            "Assume Role Session Name": null, 
                            "Credentials File": null, 
                            "Secret Key": null, 
                            "Session Time": "3600", 
                            "anonymous-credentials": "false", 
                            "assume-role-external-id": null, 
                            "assume-role-proxy-host": null, 
                            "assume-role-proxy-port": null, 
                            "default-credentials": "false", 
                            "profile-name": null
                        }, 
                        "referencingComponents": [
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "9f11ee43-5332-3c99-b12d-4cb77b3795c1", 
                                    "name": "S3-KPI-Data", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "KPI.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "9f11ee43-5332-3c99-b12d-4cb77b3795c1", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "a53d8842-2657-35fa-cf61-d6588941c6fa", 
                                    "name": "S3-All-Schools", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "all-school-wise.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "a53d8842-2657-35fa-cf61-d6588941c6fa", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "72aba0cd-61fd-393f-5e3f-cd334a23fda9", 
                                    "name": "S3-Gender-wise", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "gender-wise.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "72aba0cd-61fd-393f-5e3f-cd334a23fda9", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "0e072b7f-8ab2-3074-0c94-e809976eb4de", 
                                    "name": "S3-month-wise-attendance", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "month-wise.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "0e072b7f-8ab2-3074-0c94-e809976eb4de", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "297658ee-416f-3d19-3517-8328ca984b01", 
                                    "name": "S3-raw-input", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_input_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "Tibil_${now():toNumber()}", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "297658ee-416f-3d19-3517-8328ca984b01", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "84282c87-a04a-3c6e-12e9-5e8a4291281f", 
                                    "name": "S3 Schools Gender-wise", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "Schools-gender-wise.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "84282c87-a04a-3c6e-12e9-5e8a4291281f", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }, 
                            {
                                "component": {
                                    "activeThreadCount": 0, 
                                    "descriptors": {
                                        "AWS Credentials Provider service": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AWS-S3-cred", 
                                                        "value": "7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "description": "The Controller Service that is used to obtain aws credentials provider", 
                                            "displayName": "AWS Credentials Provider service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "AWS Credentials Provider service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Access Key": {
                                            "description": "", 
                                            "displayName": "Access Key ID", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Access Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Bucket": {
                                            "description": "", 
                                            "displayName": "Bucket", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Bucket", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Communications Timeout": {
                                            "defaultValue": "30 secs", 
                                            "description": "", 
                                            "displayName": "Communications Timeout", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Communications Timeout", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Content Type": {
                                            "description": "Sets the Content-Type HTTP header indicating the type of content stored in the associated object. The value of this header is a standard MIME type.\nAWS S3 Java client will attempt to determine the correct content type if one hasn't been set yet. Users are responsible for ensuring a suitable content type is set when uploading streams. If no content type is provided and cannot be determined by the filename, the default content type \"application/octet-stream\" will be used.", 
                                            "displayName": "Content Type", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Content Type", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Credentials File": {
                                            "description": "Path to a file containing AWS access key and secret key in properties file format.", 
                                            "displayName": "Credentials File", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Credentials File", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Endpoint Override URL": {
                                            "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.", 
                                            "displayName": "Endpoint Override URL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Endpoint Override URL", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Expiration Time Rule": {
                                            "description": "", 
                                            "displayName": "Expiration Time Rule", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Expiration Time Rule", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "FullControl User List": {
                                            "defaultValue": "${s3.permissions.full.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object", 
                                            "displayName": "FullControl User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "FullControl User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Multipart Part Size": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the part size for use when the PutS3Multipart Upload API is used.\nFlow files will be broken into chunks of this size for the upload process, but the last part sent can be smaller since it is not padded.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Part Size", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Part Size", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Threshold": {
                                            "defaultValue": "5 GB", 
                                            "description": "Specifies the file size threshold for switch from the PutS3Object API to the PutS3MultipartUpload API.  Flow files bigger than this limit will be sent using the stateful multipart process.\nThe valid range is 50MB to 5GB.", 
                                            "displayName": "Multipart Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload AgeOff Interval": {
                                            "defaultValue": "60 min", 
                                            "description": "Specifies the interval at which existing multipart uploads in AWS S3 will be evaluated for ageoff.  When processor is triggered it will initiate the ageoff evaluation if this interval has been exceeded.", 
                                            "displayName": "Multipart Upload AgeOff Interval", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload AgeOff Interval", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Multipart Upload Max Age Threshold": {
                                            "defaultValue": "7 days", 
                                            "description": "Specifies the maximum age for existing multipart uploads in AWS S3.  When the ageoff process occurs, any upload older than this threshold will be aborted.", 
                                            "displayName": "Multipart Upload Max Age Threshold", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Multipart Upload Max Age Threshold", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Object Key": {
                                            "defaultValue": "${filename}", 
                                            "description": "", 
                                            "displayName": "Object Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Object Key", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Owner": {
                                            "defaultValue": "${s3.owner}", 
                                            "description": "The Amazon ID to use for the object's owner", 
                                            "displayName": "Owner", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Owner", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host": {
                                            "description": "Proxy host name or IP", 
                                            "displayName": "Proxy Host", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Proxy Host Port": {
                                            "description": "Proxy host port", 
                                            "displayName": "Proxy Host Port", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Proxy Host Port", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read ACL User List": {
                                            "defaultValue": "${s3.permissions.readacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object", 
                                            "displayName": "Read ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Read Permission User List": {
                                            "defaultValue": "${s3.permissions.read.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object", 
                                            "displayName": "Read Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Read Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Region": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-west-1", 
                                                        "displayName": "AWS GovCloud (US)", 
                                                        "value": "us-gov-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-gov-east-1", 
                                                        "displayName": "AWS GovCloud (US-East)", 
                                                        "value": "us-gov-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-1", 
                                                        "displayName": "US East (N. Virginia)", 
                                                        "value": "us-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-east-2", 
                                                        "displayName": "US East (Ohio)", 
                                                        "value": "us-east-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-1", 
                                                        "displayName": "US West (N. California)", 
                                                        "value": "us-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : us-west-2", 
                                                        "displayName": "US West (Oregon)", 
                                                        "value": "us-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-1", 
                                                        "displayName": "EU (Ireland)", 
                                                        "value": "eu-west-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-2", 
                                                        "displayName": "EU (London)", 
                                                        "value": "eu-west-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-west-3", 
                                                        "displayName": "EU (Paris)", 
                                                        "value": "eu-west-3"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-central-1", 
                                                        "displayName": "EU (Frankfurt)", 
                                                        "value": "eu-central-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : eu-north-1", 
                                                        "displayName": "EU (Stockholm)", 
                                                        "value": "eu-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-east-1", 
                                                        "displayName": "Asia Pacific (Hong Kong)", 
                                                        "value": "ap-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-south-1", 
                                                        "displayName": "Asia Pacific (Mumbai)", 
                                                        "value": "ap-south-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-1", 
                                                        "displayName": "Asia Pacific (Singapore)", 
                                                        "value": "ap-southeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-southeast-2", 
                                                        "displayName": "Asia Pacific (Sydney)", 
                                                        "value": "ap-southeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-1", 
                                                        "displayName": "Asia Pacific (Tokyo)", 
                                                        "value": "ap-northeast-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ap-northeast-2", 
                                                        "displayName": "Asia Pacific (Seoul)", 
                                                        "value": "ap-northeast-2"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : sa-east-1", 
                                                        "displayName": "South America (Sao Paulo)", 
                                                        "value": "sa-east-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-north-1", 
                                                        "displayName": "China (Beijing)", 
                                                        "value": "cn-north-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : cn-northwest-1", 
                                                        "displayName": "China (Ningxia)", 
                                                        "value": "cn-northwest-1"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "description": "AWS Region Code : ca-central-1", 
                                                        "displayName": "Canada (Central)", 
                                                        "value": "ca-central-1"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "us-west-2", 
                                            "description": "", 
                                            "displayName": "Region", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Region", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "SSL Context Service": {
                                            "allowableValues": [], 
                                            "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections", 
                                            "displayName": "SSL Context Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "SSL Context Service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Secret Key": {
                                            "description": "", 
                                            "displayName": "Secret Access Key", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry Only", 
                                            "name": "Secret Key", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "Signer Override": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Default Signature", 
                                                        "value": "Default Signature"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v4", 
                                                        "value": "AWSS3V4SignerType"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Signature v2", 
                                                        "value": "S3SignerType"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Default Signature", 
                                            "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.", 
                                            "displayName": "Signer Override", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Signer Override", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Storage Class": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Standard", 
                                                        "value": "Standard"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "IntelligentTiering", 
                                                        "value": "IntelligentTiering"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "StandardInfrequentAccess", 
                                                        "value": "StandardInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "OneZoneInfrequentAccess", 
                                                        "value": "OneZoneInfrequentAccess"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "Glacier", 
                                                        "value": "Glacier"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "DeepArchive", 
                                                        "value": "DeepArchive"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "ReducedRedundancy", 
                                                        "value": "ReducedRedundancy"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "Standard", 
                                            "description": "", 
                                            "displayName": "Storage Class", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "Storage Class", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "Write ACL User List": {
                                            "defaultValue": "${s3.permissions.writeacl.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object", 
                                            "displayName": "Write ACL User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write ACL User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "Write Permission User List": {
                                            "defaultValue": "${s3.permissions.write.users}", 
                                            "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object", 
                                            "displayName": "Write Permission User List", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "Write Permission User List", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "canned-acl": {
                                            "defaultValue": "${s3.permissions.cannedacl}", 
                                            "description": "Amazon Canned ACL for an object, one of: BucketOwnerFullControl, BucketOwnerRead, LogDeliveryWrite, AuthenticatedRead, PublicReadWrite, PublicRead, Private; will be ignored if any other ACL/permission/owner property is specified", 
                                            "displayName": "Canned ACL", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "canned-acl", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "encryption-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Encryption Service Controller used to configure requests. PutS3Object: For backward compatibility, this value is ignored when 'Server Side Encryption' is set. FetchS3Object: Only needs to be configured in case of Server-side Customer Key, Client-side KMS and Client-side Customer Key encryptions.", 
                                            "displayName": "Encryption Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.processors.aws.s3.AmazonS3EncryptionService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-aws-service-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "encryption-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-configuration-service": {
                                            "allowableValues": [], 
                                            "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: HTTP + AuthN", 
                                            "displayName": "Proxy Configuration Service", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService", 
                                            "identifiesControllerServiceBundle": {
                                                "artifact": "nifi-standard-services-api-nar", 
                                                "group": "org.apache.nifi", 
                                                "version": "1.10.0"
                                            }, 
                                            "name": "proxy-configuration-service", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "proxy-user-name": {
                                            "description": "Proxy username", 
                                            "displayName": "Proxy Username", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-name", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "proxy-user-password": {
                                            "description": "Proxy password", 
                                            "displayName": "Proxy Password", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "true (undefined scope)", 
                                            "name": "proxy-user-password", 
                                            "required": false, 
                                            "sensitive": true, 
                                            "supportsEl": true
                                        }, 
                                        "s3-object-remove-tags-prefix": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "True", 
                                                        "value": "true"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "False", 
                                                        "value": "false"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "false", 
                                            "description": "If set to 'True', the value provided for 'Object Tags Prefix' will be removed from the attribute(s) and then considered as the Tag name. For ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII and the prefix is set to 'tagS3' then the corresponding tag values would be 'country' and 'PII'", 
                                            "displayName": "Remove Tag Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "s3-object-remove-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }, 
                                        "s3-object-tags-prefix": {
                                            "description": "Specifies the prefix which would be scanned against the incoming FlowFile's attributes and the matching attribute's name and value would be considered as the outgoing S3 object's Tag name and Tag value respectively. For Ex: If the incoming FlowFile carries the attributes tagS3country, tagS3PII, the tag prefix to be specified would be 'tagS3'", 
                                            "displayName": "Object Tags Prefix", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Variable Registry and FlowFile Attributes", 
                                            "name": "s3-object-tags-prefix", 
                                            "required": false, 
                                            "sensitive": false, 
                                            "supportsEl": true
                                        }, 
                                        "server-side-encryption": {
                                            "allowableValues": [
                                                {
                                                    "allowableValue": {
                                                        "displayName": "None", 
                                                        "value": "None"
                                                    }, 
                                                    "canRead": true
                                                }, 
                                                {
                                                    "allowableValue": {
                                                        "displayName": "AES256", 
                                                        "value": "AES256"
                                                    }, 
                                                    "canRead": true
                                                }
                                            ], 
                                            "defaultValue": "None", 
                                            "description": "Specifies the algorithm used for server side encryption.", 
                                            "displayName": "Server Side Encryption", 
                                            "dynamic": false, 
                                            "expressionLanguageScope": "Not Supported", 
                                            "name": "server-side-encryption", 
                                            "required": true, 
                                            "sensitive": false, 
                                            "supportsEl": false
                                        }
                                    }, 
                                    "groupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                                    "id": "28e05603-53b9-3cc5-3fc2-5a30da388f17", 
                                    "name": "S3-All-school-month-wise", 
                                    "properties": {
                                        "AWS Credentials Provider service": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                                        "Access Key": null, 
                                        "Bucket": "#{s3_output_bucket}", 
                                        "Communications Timeout": "30 secs", 
                                        "Content Type": null, 
                                        "Credentials File": null, 
                                        "Endpoint Override URL": null, 
                                        "Expiration Time Rule": null, 
                                        "FullControl User List": "${s3.permissions.full.users}", 
                                        "Multipart Part Size": "100 MB", 
                                        "Multipart Threshold": "1 GB", 
                                        "Multipart Upload AgeOff Interval": "60 min", 
                                        "Multipart Upload Max Age Threshold": "7 days", 
                                        "Object Key": "school-month-wise.json", 
                                        "Owner": "${s3.owner}", 
                                        "Proxy Host": null, 
                                        "Proxy Host Port": null, 
                                        "Read ACL User List": "${s3.permissions.readacl.users}", 
                                        "Read Permission User List": "${s3.permissions.read.users}", 
                                        "Region": "ap-south-1", 
                                        "SSL Context Service": null, 
                                        "Secret Key": null, 
                                        "Signer Override": "Default Signature", 
                                        "Storage Class": "Standard", 
                                        "Write ACL User List": "${s3.permissions.writeacl.users}", 
                                        "Write Permission User List": "${s3.permissions.write.users}", 
                                        "canned-acl": "${s3.permissions.cannedacl}", 
                                        "encryption-service": null, 
                                        "proxy-configuration-service": null, 
                                        "proxy-user-name": null, 
                                        "proxy-user-password": null, 
                                        "s3-object-remove-tags-prefix": "false", 
                                        "s3-object-tags-prefix": null, 
                                        "server-side-encryption": "None"
                                    }, 
                                    "referenceType": "Processor", 
                                    "state": "STOPPED", 
                                    "type": "PutS3Object", 
                                    "validationErrors": [
                                        "'Bucket' is invalid because Property references one or more Parameters but no Parameter Context is currently set on the Process Group"
                                    ]
                                }, 
                                "id": "28e05603-53b9-3cc5-3fc2-5a30da388f17", 
                                "operatePermissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "permissions": {
                                    "canRead": true, 
                                    "canWrite": true
                                }, 
                                "revision": {
                                    "lastModifier": "anonymous", 
                                    "version": 1
                                }
                            }
                        ], 
                        "restricted": false, 
                        "state": "ENABLED", 
                        "type": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderControllerService", 
                        "validationStatus": "VALID", 
                        "versionedComponentId": "7e809fc7-383f-38e1-bb9f-cc162017a71d"
                    }, 
                    "id": "7e809fc7-383f-38e1-8495-dbaaf42b7d12", 
                    "operatePermissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "parentGroupId": "9417f840-fd5e-3670-5946-85d8525322ee", 
                    "permissions": {
                        "canRead": true, 
                        "canWrite": true
                    }, 
                    "revision": {
                        "version": 1
                    }, 
                    "status": {
                        "runStatus": "ENABLED", 
                        "validationStatus": "VALID"
                    }, 
                    "uri": "http://localhost:8080/nifi-api/controller-services/7e809fc7-383f-38e1-8495-dbaaf42b7d12"
                }
            ], 
            "currentTime": "18:11:06 UTC"
        }, 
        "msg": "OK (unknown bytes)", 
        "redirected": false, 
        "server": "Jetty(9.4.19.v20190610)", 
        "status": 200, 
        "url": "http://localhost:8080/nifi-api/flow/process-groups/9417f840-fd5e-3670-5946-85d8525322ee/controller-services", 
        "vary": "Accept-Encoding, User-Agent", 
        "x_frame_options": "SAMEORIGIN", 
        "x_xss_protection": "1; mode=block"
    }
}

TASK [Start controllers] ****************************************************************************************************************
fatal: [localhost]: FAILED! => {"changed": false, "connection": "close", "content": "cd1c6111-fd44-386b-10f7-e69ba601cb95 cannot be enabled because it is not disabled", "content_length": "81", "content_security_policy": "frame-ancestors 'self'", "content_type": "text/plain", "date": "Thu, 19 Mar 2020 18:11:08 GMT", "elapsed": 0, "msg": "Status code was 409 and not [200]: HTTP Error 409: Conflict", "redirected": false, "server": "Jetty(9.4.19.v20190610)", "status": 409, "url": "http://localhost:8080/nifi-api/controller-services/cd1c6111-fd44-386b-10f7-e69ba601cb95", "vary": "Accept-Encoding", "x_frame_options": "SAMEORIGIN", "x_xss_protection": "1; mode=block"}

PLAY RECAP ******************************************************************************************************************************
localhost                  : ok=8    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

