---
- hosts: localhost
  connection: local
  tasks:
   - name: Fetch nifi processor group id
     uri:
       url: http://localhost:8080/nifi-api/process-groups/root
       method: GET
     register: processor_id

   - name: Get processor group
     uri:
       url: http://localhost:8080/nifi-api/flow/process-groups/{{ processor_id.json.id }}
       method: GET
     register: processor_group

   - name: Get Default Processor Group
     uri:
       url: http://localhost:8080/nifi-api/flow/parameter-contexts
       method: GET
     register: pg

     #  - name: Connection of Parameter context to processor group 
     # uri:
     #   url: http://localhost:8080/nifi-api/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}
     #  method: PUT
     #  body_format: json
     #  body: {"revision": {
     #       "version": 0,
     #       "lastModifier": "Ansible"
     #   },"component":
     #         {"id": "{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}","parameterContext":{"id": "{{ pg.json.parameterContexts[0].id }}"}}
     #}


   - name: Get controllers
     uri:
       url: http://localhost:8080/nifi-api/flow/process-groups/{{ processor_group.json.processGroupFlow.flow.processGroups[0].component.id }}/controller-services
       method: GET
     register: controllers_list


   - name: Start controllers
     uri:
       url: http://localhost:8080/nifi-api/controller-services/{{ item.id }}
       method: PUT
       body_format: json
       body: {"revision": {
            "version": "{{ item.revision.version }}",
            "lastModifier": "Ansible"
        },
        "component":
        {"id": "{{ item.id }}","state":"ENABLED"}
        }
     loop: "{{ controllers_list.json | json_query('controllerServices[*]') }}"
     when: item.component.state == 'DISABLED'

   - name: Start Processor group
     uri:
       url: http://localhost:8080/nifi-api/flow/process-groups/{{ processor_group.json.processGroupFlow.id }}
       method: PUT
       body_format: json
       body: {"id":"{{ processor_group.json.processGroupFlow.id }}","state":"RUNNING"}

