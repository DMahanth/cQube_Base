- name: Install the gpg key for nodejs LTS
  apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present

- name: Install the nodejs LTS repos
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_{{ nodejs_version }}.x {{ ansible_distribution_release }} main"
    state: present
    update_cache: yes

- name: Install the nodejs
  apt:
    name: nodejs
    state: present

- name: Node.js - Install express
  npm: name={{ item }} state=present global=yes
  with_items:
    - "@angular/cli"
    - nodemon
    - pm2
    - http-server

- name: Change permission
  file:
    path: ../../development/angular
    mode: '1755'

- name: Change to Node directory
  shell: cd ../../development/angular/server-side

- name: NodeJS dependencies install
  npm:
    path: ../../development/angular/server-side

- name: Creating environmental variables
  file:
    path: ../../development/angular/server-side/.env
    state: touch
    mode: u+rw,g+rw,o+rw

- name: Loading required data inside .env file
  blockinfile:
        path: ../../development/angular/server-side/.env
        block: |
                PORT = 3000
                ACCESS_KEY_ID = "{{ s3_access_key }}"
                SECRET_ACCESS_KEY  = "{{ s3_secret_key }}"
                OUTPUT_BUCKET = "{{ s3_output_bucket }}"

- name: Starting NodeJS application
  become: yes
  shell: pm2 start npm -- start
  args:
    chdir: ../../development/angular/server-side

- name: Replacing endpoint value in environment.ts
  lineinfile:
    path: ../../development/angular/client-side/src/environments/environment.ts
    regexp: "apiEndpoint"
    line: "apiEndpoint: '{{ api_endpoint }}'"

- name: Replacing endpoint value in environment.prod.ts
  lineinfile:
    path: ../../development/angular/client-side/src/environments/environment.prod.ts
    regexp: "apiEndpoint"
    line: "apiEndpoint: '{{ api_endpoint }}'"

- name: Change to Angular directory
  shell: cd ../../development/angular/client-side

- name: Install Angular packages based on package.json.
  npm:
    path: ../../development/angular/client-side

- name: Building Angular client-side code
  command: ng build --prod
  args:
    chdir: ../../development/angular/client-side

- name: Making sure www directory is present
  file:
    path: /var/www
    state: directory

- name: Copying built angular app into www directory
  copy:
    src: ../../development/angular/client-side/dist
    dest: /var/www

- name: checking process of pm2 http-server
  become: yes
  shell: pm2 id http-server
  register: pm2_output

- name: checking the existing pm2 processes if running
  shell: pm2 delete http-server
  when: pm2_output.stdout != "[]"
  ignore_errors: True
  become: yes

- name: Starting / restarting the http-server
  become: yes
  shell: pm2 start /usr/bin/http-server -- -a {{ local_ipv4_address }} -p 4200 
  args:
    chdir: /var/www/dist/gujarat-project
