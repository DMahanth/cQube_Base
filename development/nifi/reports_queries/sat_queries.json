[
    {
        "sat_management_exam_school_overall": "Select * from semester_exam_school_mgmt_all"
    },
    {
        "sat_management_exam_cluster_overall": "Select * from semester_exam_cluster_mgmt_all"
    },
    {
        "sat_management_exam_block_overall": "select * from semester_exam_block_mgmt_all"
    },
    {
        "sat_management_exam_district_overall": "Select * from semester_exam_district_mgmt_all"
    },
    {
        "sat_management_grade_school_overall": "Select * from semester_grade_school_mgmt_all"
    },
    {
        "sat_management_grade_cluster_overall": "Select * from semester_grade_cluster_mgmt_all"
    },
    {
        "sat_management_grade_block_overall": "Select * from semester_grade_block_mgmt_all"
    },
    {
        "sat_management_grade_district_overall": "Select * from semester_grade_district_mgmt_all"
    },
    {
        "sat_management_exam_school_last_30_days": "Select * from semester_exam_school_mgmt_last30"
    },
    {
        "sat_management_exam_cluster_last_30_days": "Select * from semester_exam_cluster_mgmt_last30"
    },
    {
        "sat_management_exam_block_last_30_days": "Select * from semester_exam_block_mgmt_last30"
    },
    {
        "sat_management_exam_district_last_30_days": "Select * from semester_exam_district_mgmt_last30"
    },
    {
        "sat_management_grade_school_last_30_days": "Select * from semester_grade_school_mgmt_last30"
    },
    {
        "sat_management_grade_cluster_last_30_days": "Select * from semester_grade_cluster_mgmt_last30"
    },
    {
        "sat_management_grade_block_last_30_days": "Select * from semester_grade_block_mgmt_last30"
    },
    {
        "sat_management_grade_district_last_30_days": "Select * from semester_grade_district_mgmt_last30"
    },
    {
        "sat_management_exam_school_last_7_days": "Select * from semester_exam_school_mgmt_last7"
    },
    {
        "sat_management_exam_cluster_last_7_days": "Select * from semester_exam_cluster_mgmt_last7"
    },
    {
        "sat_management_exam_block_last_7_days": "Select * from semester_exam_block_mgmt_last7"
    },
    {
        "sat_management_exam_district_last_7_days": "Select * from semester_exam_district_mgmt_last7"
    },
    {
        "sat_management_grade_school_last_7_days": "Select * from semester_grade_school_mgmt_last7"
    },
    {
        "sat_management_grade_cluster_last_7_days": "Select * from semester_grade_cluster_mgmt_last7"
    },
    {
        "sat_management_grade_block_last_7_days": "Select * from semester_grade_block_mgmt_last7"
    },
    {
        "sat_management_grade_district_last_7_days": "Select * from semester_grade_district_mgmt_last7"
    },
    {
        "sat_management_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'),'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name, district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,cluster_id,school_id,question_id"
    },
    {
        "sat_management_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(trim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator,school_management_type order by district_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,question_id,indicator,school_management_type order by district_id,block_id,cluster_id,question_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,indicator,school_management_type order by district_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,indicator,school_management_type order by district_id,block_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_management_type, district_id,district_name,indicator order by district_id,block_id,cluster_id "
    },
    {
        "sat_management_learning_outcome_p1_indicator_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students,school_management_type from semester_exam_school_qst_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type, district_id,district_name,indicator order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_management_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,district_id,district_name,school_management_type order by district_id,grade,subject_name "
    },
    {
        "sat_management_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name, sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,school_management_type order by district_id,block_id "
    },
    {
        "sat_management_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id "
    },
    {
        "sat_management_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students,school_management_type from semester_exam_school_result  where school_management_type is not null group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,school_management_type order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_exam_district_all": "Select * from semester_exam_district_all "
    },
    {
        "sat_grade_district_all": "Select * from semester_grade_district_all where semester=1"
    },
    {
        "sat_grade_district_all": "Select * from semester_grade_district_all where semester=2"
    },
    {
        "sat_exam_block_all": "Select * from semester_exam_block_all"
    },
    {
        "sat_grade_block_all": "Select * from semester_grade_block_all where semester=1"
    },
    {
        "sat_grade_block_all": "Select * from semester_grade_block_all where semester=2"
    },
    {
        "sat_exam_cluster_all": "Select * from semester_exam_cluster_all"
    },
    {
        "sat_grade_cluster_all": "Select * from semester_grade_cluster_all where semester=1"
    },
    {
        "sat_grade_cluster_all": "Select * from semester_grade_cluster_all where semester=2"
    },
    {
        "sat_exam_school_all": "Select * from semester_exam_school_all"
    },
    {
        "sat_grade_school_all": "Select * from semester_grade_school_all where semester=1"
    },
    {
        "sat_grade_school_all": "Select * from semester_grade_school_all where semester=2"
    },
    {
        "sat_meta_all": "select json_object_agg(col,data) from ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d)union(select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d)union(select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_all": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_all;"
    },
    {
        "sat_exam_district_last30": "Select * from semester_exam_district_last30"
    },
    {
        "sat_grade_district_last30": "Select * from semester_grade_district_last30 where semester=1"
    },
    {
        "sat_grade_district_last30": "Select * from semester_grade_district_last30 where semester=2"
    },
    {
        "sat_exam_block_last30": "Select * from semester_exam_block_last30"
    },
    {
        "sat_grade_block_last30": "Select * from semester_grade_block_last30 where semester=1"
    },
    {
        "sat_grade_block_last30": "Select * from semester_grade_block_last30 where semester=2"
    },
    {
        "sat_exam_cluster_last30": "Select * from semester_exam_cluster_last30"
    },
    {
        "sat_grade_cluster_last30": "Select * from semester_grade_cluster_last30 where semester=1"
    },
    {
        "sat_grade_cluster_last30": "Select * from semester_grade_cluster_last30 where semester=2"
    },
    {
        "sat_exam_school_last30": "Select * from semester_exam_school_last30"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30 where semester=1"
    },
    {
        "sat_grade_school_last30": "Select * from semester_grade_school_last30 where semester=2"
    },
    {
        "sat_meta_last30": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_last30": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_last30;"
    },
    {
        "sat_exam_district_last7": "Select * from semester_exam_district_last7"
    },
    {
        "sat_grade_district_last7": "Select * from semester_grade_district_last7 where semester=1"
    },
    {
        "sat_grade_district_last7": "Select * from semester_grade_district_last7 where semester=2"
    },
    {
        "sat_exam_block_last7": "Select * from semester_exam_block_last7"
    },
    {
        "sat_grade_block_last7": "Select * from semester_grade_block_last7 where semester=1"
    },
    {
        "sat_grade_block_last7": "Select * from semester_grade_block_last7 where semester=2"
    },
    {
        "sat_exam_cluster_last7": "Select * from semester_exam_cluster_last7"
    },
    {
        "sat_grade_cluster_last7": "Select * from semester_grade_cluster_last7 where semester=1"
    },
    {
        "sat_grade_cluster_last7": "Select * from semester_grade_cluster_last7 where semester=2"
    },
    {
        "sat_exam_school_last7": "Select * from semester_exam_school_last7"
    },
    {
        "sat_grade_school_last7": "Select * from semester_grade_school_last7 where semester=1"
    },
    {
        "sat_grade_school_last7": "Select * from semester_grade_school_last7 where semester=2"
    },
    {
        "sat_meta_last7": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from semester_grade_school_all group by grade)as d))as d"
    },
    {
        "sat_meta_semester_last7": "select distinct concat('sem_',semester) as id, concat('Semester ',semester) as name,academic_year from semester_exam_district_last7;"
    },
    {
        "sat_learning_outcome_p1_question_meta": "select replace(json_agg(sat_meta)::text,'\\','') as sat_meta from (select json_build_object('academic_year',academic_year,'data',json_object_agg(col,data))as sat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from semester_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from semester_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from semester_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
    },
    {
        "sat_learning_outcome_p1_question_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks,round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name, district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,school_id,question_id"
    },
    {
        "sat_learning_outcome_p1_question_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(trim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator order by district_id,question_id "
    },
    {
        "sat_learning_outcome_p1_question_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator order by district_id,block_id,question_id "
    },
    {
        "sat_learning_outcome_p1_question_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,question_id "
    },
    {
        "sat_learning_outcome_p1_indicator_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,district_id,district_name,indicator order by district_id "
    },
    {
        "sat_learning_outcome_p1_indicator_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,indicator order by district_id,block_id "
    },
    {
        "sat_learning_outcome_p1_indicator_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator, sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,indicator order by district_id,block_id,cluster_id "
    },
    {
        "sat_learning_outcome_p1_indicator_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR( TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month' )))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(total_students) as total_students from semester_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name, district_id,district_name,indicator order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_learning_outcome_p3_meta": "select replace(json_agg(sat_meta)::text,'\\','') as sat_meta from (select json_build_object('academic_year',academic_year,'data',json_object_agg(col,data))as sat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from semester_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from semester_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from semester_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
    },
    {
        "sat_learning_outcome_p3_all": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,district_id,district_name order by district_id,grade,subject_name "
    },
    {
        "sat_learning_outcome_p3_district": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name, sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name order by district_id,block_id "
    },
    {
        "sat_learning_outcome_p3_block": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name, district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month, round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name order by district_id,block_id,cluster_id "
    },
    {
        "sat_learning_outcome_p3_cluster": "select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date, block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended, rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks, round(coalesce((sum(obtained_marks)*100),0)/nullif(coalesce(sum(total_marks),0),0),1)as percentage, count(school_id)as total_schools,sum(students_count) as total_students from semester_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name order by district_id,block_id,cluster_id,school_id "
    },
    {
        "sat_exception_district_all": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,district_latitude,district_longitude,semester) as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester) as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude, Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_all group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_all group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    {
        "sat_exception_district_last_7_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 group by district_id,district_name,district_latitude,district_longitude,semester)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_last_7_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received,semester from sat_exception_data_last7 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_last_7_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_last7 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    {
        "sat_exception_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,district_latitude,district_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,district_latitude,district_longitude,semester)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id "
    },
    {
        "sat_exception_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id "
    },
    {
        "sat_exception_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,semester from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester)as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id "
    },
    {
        "sat_exception_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last30 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester "
    },
    

    {
        "sat_exception_grade_district_all": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_all": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_all": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_all where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_all where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester"
    },
    {
        "sat_exception_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_last7 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_last7 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester "
    },
    {
        "sat_exception_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data, total_schools_sub,total_schools_not_received_sub from ((select a.semester,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester) as a inner join  ( select district_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade) as b on a.district_id=b.district_id and a.grade=b.grade) union (select c.semester,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub, Null as total_schools_sub from(select semester,district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject,semester)as c inner join ( select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by district_id,sg.grade)as d on c.district_id = d.district_id and c.grade=d.grade))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,total_schools_not_received_sub,total_schools_sub ,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ( (select a.semester,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from (select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade) as b on a.block_id = b.block_id and a.grade=b.grade) union (select c.semester,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,Null as total_schools_sub from(select semester,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by block_id,sg.grade)as d on c.block_id = d.block_id and c.grade=d.grade))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id, a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data from ((select a.semester,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject,0 as total_schools_not_received, Null as total_schools,total_schools_not_received_sub,total_schools_sub from( select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade) as b on a.cluster_id = b.cluster_id and a.grade=b.grade) union (select c.semester,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade,subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id group by cluster_id,sg.grade)as d on c.cluster_id = d.cluster_id and c.grade=d.grade))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub, 'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject, 0 as Total_schools_with_missing_data,0 as total_schools, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub from sat_exception_grade_data_last30 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct semester,school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, 'grade' as subject, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data, Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub from sat_exception_grade_data_last30 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,semester "
    },


    {
        "sat_exception_management_district_all": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data,a.school_management_type,semester from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received ,school_management_type,semester from sat_exception_data_all where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester) as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, semester,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_all where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester) as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.school_management_type,semester, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_all  where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester) as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,semester from sat_exception_data_all where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_district_last7days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,semester, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_block_last7days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.school_management_type,semester, b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_cluster_last7days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last7 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester) as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_schools_last7days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last7 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,semester, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,school_management_type,semester)as a join (select district_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null  group by district_id,school_management_type)as b on a.district_id=b.district_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,school_management_type,semester)as a join (select block_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by block_id,school_management_type)as b on a.block_id=b.block_id and a.school_management_type=b.school_management_type where a.school_management_type is not null; "
    },
    {
        "sat_exception_management_cluster_last_30_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.school_management_type,semester, a.total_schools_not_received as Total_schools_with_missing_data, round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester, Count(DISTINCT(school_id)) AS total_schools_not_received from sat_exception_data_last30 where school_management_type is not null group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,school_management_type,semester)as a join (select cluster_id,school_management_type,count(distinct(school_id)) as total_schools from school_hierarchy_details where school_management_type is not null group by cluster_id,school_management_type)as b on a.cluster_id=b.cluster_id and a.school_management_type=b.school_management_type where a.school_management_type is not null "
    },
    {
        "sat_exception_management_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_management_type,semester, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from sat_exception_data_last30 where school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_all": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_all": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_all": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_all where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_all where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_all where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_last_7_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_last_7_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_last_7_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last7 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_last7 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_last7 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    },
    {
        "sat_exception_management_grade_district_last_30_days": "select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type, s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data, sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data', percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type,a.semester, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,a.district_id,district_name,district_latitude,district_longitude,a.grade,subject,0 as total_schools_not_received,Null as total_schools,total_schools_not_received_sub,total_schools_sub from (select district_id,district_name,district_latitude,district_longitude,school_management_type,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub, semester from sat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester) as a inner join  (select district_id,count(distinct(shd.school_id)) as total_schools_sub, concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type) as b on a.district_id = b.district_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,c.district_id,district_name,district_latitude,district_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade,school_management_type, semester from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id,district_name,district_latitude,district_longitude,grade,subject, school_management_type,semester)as c inner join (select district_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id   where school_management_type is not null group by district_id,sg.grade,school_management_type )as d on c.district_id = d.district_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,s.school_management_type,s.semester "
    },
    {
        "sat_exception_management_grade_block_last_30_days": "select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data, a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,a.grade,subject,0 as total_schools_not_received,NULL as total_schools, total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where school_management_type is not null and  subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester) as a inner join  (select block_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type) as b on a.block_id = b.block_id and a.school_management_type=b.school_management_type and a.grade=b.grade) union (select c.semester,c.school_management_type,district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,c.grade,subject,total_schools_with_missing_data_grade as total_schools_not_received, total_schools, 0 as total_schools_not_received_sub,NULL as total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade'  and school_management_type is not null group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,school_management_type,semester)as c inner join (select block_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by block_id,sg.grade,school_management_type)as d on c.block_id = d.block_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s where s.school_management_type is not null group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,s.school_management_type,semester "
    },
    {
        "sat_exception_management_grade_cluster_last_30_days": "select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.school_management_type,s.semester, sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools, round((cast(sum(s.Total_schools_with_missing_data) as numeric)/coalesce(cast(sum(s.total_schools) as numeric),1))*100.0,2) as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools',total_schools_sub,'total_schools_with_missing_data', total_schools_not_received_sub, 'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.semester,a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools, a.total_schools_not_received as Total_schools_with_missing_data,a.school_management_type, round((cast(a.total_schools_not_received_sub as numeric)/coalesce(cast(a.total_schools_sub as numeric),1))*100.0,2) as percentage_schools_with_missing_data,total_schools_not_received_sub,total_schools_sub from ((select a.semester,a.school_management_type,district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,a.grade,subject, 0 as total_schools_not_received,NULL as total_schools,total_schools_not_received_sub,total_schools_sub from(select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name, cluster_latitude, cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS total_schools_not_received_sub from sat_exception_grade_data_last30 where subject !='grade' and school_management_type is not null group by district_id,district_name,block_id,block_name, cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,school_management_type,semester) as a inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools_sub,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type) as b on a.cluster_id = b.cluster_id and a.school_management_type=b.school_management_type and a.cluster_id=b.cluster_id) union (select c.semester,c.school_management_type,district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,c.grade, subject, total_schools_with_missing_data_grade as total_schools_not_received,total_schools,0 as total_schools_not_received_sub,NULL as total_schools_sub from (select semester,school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject, Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by school_management_type,district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,semester)as c inner join (select cluster_id,count(distinct(shd.school_id)) as total_schools,concat ('Grade ',sg.grade) as grade,school_management_type from school_hierarchy_details shd inner join (select * from school_grade_enrolment)as sg on shd.school_id=sg.school_id  where school_management_type is not null group by cluster_id,sg.grade,school_management_type)as d on c.cluster_id = d.cluster_id and c.school_management_type=d.school_management_type and c.grade=d.grade))as a)as s group by s.school_management_type,s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,s.semester "
    },
    {
        "sat_exception_management_grade_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade, s.school_management_type, s.semester, sum(Total_schools_with_missing_data) as Total_schools_with_missing_data,sum(total_schools) as total_schools, round(cast(sum(s.Total_schools_with_missing_data) as numeric)/ coalesce(cast(sum(case when total_schools=0 then NULL else total_schools end) as numeric),1)*100.0,2)  as percentage_schools_with_missing_data, json_agg(json_build_object(subject,json_build_object('total_schools', total_schools_sub,'total_schools_with_missing_data', Total_schools_with_missing_data_sub))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,school_management_type, 0 as Total_schools_with_missing_data,0 as total_schools,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data_sub,Count(DISTINCT(school_id)) AS total_schools_sub,semester from sat_exception_grade_data_last30 where subject!='grade' and school_management_type is not null group by school_management_type,district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject,semester) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,school_management_type, Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools,0 as Total_schools_with_missing_data_sub,0 as total_schools_sub, semester from sat_exception_grade_data_last30 where subject ='grade' and school_management_type is not null group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,school_management_type,semester))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,school_management_type,semester "
    }
    
]