[
{
 "pat_exam_district_all": "Select * from periodic_exam_district_all"
},
{
"pat_grade_district_all": "Select * from periodic_grade_district_all"
},
{
"pat_exam_block_all": "Select * from periodic_exam_block_all"
},
{
"pat_grade_block_all": "Select * from periodic_grade_block_all"
},
{
"pat_exam_cluster_all": "Select * from periodic_exam_cluster_all"
},
{
"pat_grade_cluster_all": "Select * from periodic_grade_cluster_all"
},
{
"pat_exam_school_all": "Select * from periodic_exam_school_all"
},
{
"pat_grade_school_all": "Select * from periodic_grade_school_all"
},
{
"pat_meta_all": "select json_object_agg(col,data) from ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d)union(select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d)union(select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
},
{
"pat_exam_district_last30": "Select * from periodic_exam_district_last30"
},
{
"pat_grade_district_last30": "Select * from periodic_grade_district_last30"
},
{
"pat_exam_block_last30": "Select * from periodic_exam_block_last30"
},
{
"pat_grade_block_last30": "Select * from periodic_grade_block_last30"
},
{
"pat_exam_cluster_last30": "Select * from periodic_exam_cluster_last30"
},
{
"pat_grade_cluster_last30": "Select * from periodic_grade_cluster_last30"
},
{
"pat_exam_school_last30": "Select * from periodic_exam_school_last30"
},
{
"pat_grade_school_last30": "Select * from periodic_grade_school_last30"
},
{
"pat_meta_last30": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
},
{
"pat_exam_district_last7": "Select * from periodic_exam_district_last7"
},
{
"pat_grade_district_last7": "Select * from periodic_grade_district_last7"
},
{
"pat_exam_block_last7": "Select * from periodic_exam_block_last7"
},
{
"pat_grade_block_last7": "Select * from periodic_grade_block_last7"
},
{
"pat_exam_cluster_last7": "Select * from periodic_exam_cluster_last7"
},
{
"pat_grade_cluster_last7": "Select * from periodic_grade_cluster_last7"
},
{
"pat_exam_school_last7": "Select * from periodic_exam_school_last7"
},
{
"pat_grade_school_last7": "Select * from periodic_grade_school_last7"
},
{
"pat_meta_last7": "select json_object_agg(col,data) from  ((select 'district' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_district_all group by grade)as d) union (select 'block' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_block_all group by grade)as d) union (select 'cluster' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_cluster_all group by grade)as d) union (select 'school' as col,json_agg(row_to_json(d))::jsonb as data from (select grade from periodic_grade_school_all group by grade)as d))as d"
},
{
"pat_learning_outcome_p1_question_meta":"select replace(json_agg(pat_meta)::text,'\\','') as pat_meta from (select json_build_object('year',academic_year,'data',json_object_agg(col,data))as pat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from periodic_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from periodic_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from periodic_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
},
{
"pat_learning_outcome_p1_question_all": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,district_id,district_name,question_id,indicator order by district_id,question_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,district_id from (select distinct(school_id) as school_id,total_students,district_id from periodic_exam_school_qst_result)as temp group by district_id)as schools on marks_scored.district_id=schools.district_id"
},
{
"pat_learning_outcome_p1_question_district": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,question_id,indicator order by district_id,block_id,question_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,block_id from (select distinct(school_id) as school_id,total_students,block_id from periodic_exam_school_qst_result)as temp group by block_id)as schools on marks_scored.block_id=schools.block_id"
},
{
"pat_learning_outcome_p1_question_block": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator,question_id as indicator_id,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,question_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,cluster_id from (select distinct(school_id) as school_id,total_students,cluster_id from periodic_exam_school_qst_result)as temp group by cluster_id)as schools on marks_scored.cluster_id=schools.cluster_id"
},
{
"pat_learning_outcome_p1_question_cluster": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,question_id as indicator_id,district_id,district_name,question_id,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,question_id,indicator order by district_id,block_id,cluster_id,school_id,question_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,school_id from (select distinct(school_id) as school_id,total_students from periodic_exam_school_qst_result)as temp group by school_id)as schools on marks_scored.school_id=schools.school_id"
},
{
"pat_learning_outcome_p1_indicator_all":"select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,district_id,district_name,indicator order by district_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,district_id from (select distinct(school_id) as school_id,total_students,district_id from periodic_exam_school_qst_result)as temp group by district_id)as schools on marks_scored.district_id=schools.district_id"
},
{
"pat_learning_outcome_p1_indicator_district":"select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name,indicator order by district_id,block_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,block_id from (select distinct(school_id) as school_id,total_students,block_id from periodic_exam_school_qst_result)as temp group by block_id)as schools on marks_scored.block_id=schools.block_id"
},
{
"pat_learning_outcome_p1_indicator_block":"select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,indicator order by district_id,block_id,cluster_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,cluster_id from (select distinct(school_id) as school_id,total_students,cluster_id from periodic_exam_school_qst_result)as temp group by cluster_id)as schools on marks_scored.cluster_id=schools.cluster_id"
},
{
"pat_learning_outcome_p1_indicator_cluster":"select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_qst_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,indicator order by district_id,block_id,cluster_id,school_id)as marks_scored left join (select count(school_id)as total_schools,sum(total_students) as total_students,school_id from  (select distinct(school_id) as school_id,total_students from periodic_exam_school_qst_result)as temp group by school_id)as schools on marks_scored.school_id=schools.school_id"
},
{
"pat_learning_outcome_p3_meta": "select replace(json_agg(pat_meta)::text,'\\','') as pat_meta from (select json_build_object('year',academic_year,'data',json_object_agg(col,data))as pat_meta from (select 'months' as col,data::text,academic_year from (select json_object_agg(month,data) as data,academic_year from (select json_object_agg(col,data)as data,academic_year,rtrim(ltrim(month))as month from (select 'examDate' as col,json_agg(json_build_object('exam_date',exam_date))::jsonb as data,academic_year,month from (select to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,academic_year,TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month') as month from periodic_exam_school_qst_result group by exam_date,academic_year)as d group by academic_year,month)as a group by month,academic_year order by to_date(month,'Month'))as a group by academic_year)as d union (select 'grades' as col,json_agg(json_build_object('grade',grade))::text as data,academic_year from (select grade,academic_year from periodic_exam_school_qst_result group by grade,academic_year)as d group by academic_year) union (select 'subjects' as col,json_agg(json_build_object('subject',subject))::text as data,academic_year from (select subject,academic_year from periodic_exam_school_qst_result group by subject,academic_year)as d group by academic_year))as d group by academic_year)as org"
},
{
"pat_learning_outcome_p3_all": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_result group by academic_year,grade,subject,exam_date,district_id,district_name order by district_id,grade,subject_name)as marks_scored left join (select count(school_id)as total_schools,sum(students_count) as total_students,district_id from (select distinct(school_id) as school_id,students_count,district_id from periodic_exam_school_result)as temp group by district_id)as schools on marks_scored.district_id=schools.district_id where students_attended>0"
},
{
"pat_learning_outcome_p3_district": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,district_id,district_name order by district_id,block_id)as marks_scored left join (select count(school_id)as total_schools,sum(students_count) as total_students,block_id from (select distinct(school_id) as school_id,students_count,block_id from periodic_exam_school_result)as temp group by block_id)as schools on marks_scored.block_id=schools.block_id where students_attended>0"
},
{
"pat_learning_outcome_p3_block": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,district_id,district_name order by district_id,block_id,cluster_id)as marks_scored left join (select count(school_id)as total_schools,sum(students_count) as total_students,cluster_id from (select distinct(school_id) as school_id,students_count,cluster_id from periodic_exam_school_result)as temp group by cluster_id)as schools on marks_scored.cluster_id=schools.cluster_id where students_attended>0"
},
{
"pat_learning_outcome_p3_cluster": "select marks_scored.*,schools.total_schools,schools.total_students from (select academic_year,grade,subject as subject_name,to_char(cast(exam_date as text)::DATE,'dd-mm-yyyy')as exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name,sum(students_attended) as students_attended,rtrim(ltrim(TO_CHAR(TO_TIMESTAMP (date_part('month',exam_date)::text, 'MM'), 'Month')))as month,round(coalesce(sum(obtained_marks),0)/nullif(coalesce(sum(students_attended),0),0),1)as marks from periodic_exam_school_result group by academic_year,grade,subject,exam_date,block_id,block_name,cluster_id,cluster_name,school_id,school_name,district_id,district_name order by district_id,block_id,cluster_id,school_id)as marks_scored left join (select count(school_id)as total_schools,sum(students_count) as total_students,school_id from (select distinct(school_id) as school_id,students_count from periodic_exam_school_result)as temp group by school_id)as schools on marks_scored.school_id=schools.school_id where students_attended>0"
},
{
 "pat_exception_district_all":"select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,district_latitude,district_longitude) as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
},
{
"pat_exception_block_all": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,block_id,block_name,block_latitude,block_longitude) as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
},
{
"pat_exception_cluster_all": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_all group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
},
{
"pat_exception_school_all": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_all group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
},
{
"pat_exception_district_last_7_days":"select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,district_latitude,district_longitude)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
},
{
"pat_exception_block_last_7_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
},
{
"pat_exception_cluster_last_7_days": "select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last7 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude) as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
},
{
"pat_exception_school_last_7_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last7 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
},
{
"pat_exception_district_last_30_days": "select a.district_latitude,a.district_longitude,a.district_id,a.district_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,district_latitude,district_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,district_latitude,district_longitude)as a join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b on a.district_id=b.district_id"
},
{
"pat_exception_block_last_30_days": "select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,block_id,block_name,block_latitude,block_longitude)as a join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b on a.block_id=b.block_id"
},
{
"pat_exception_cluster_last_30_days":"select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,b.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from (select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_data_last30 group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude)as a join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b on a.cluster_id=b.cluster_id"
},
{
"pat_exception_school_last_30_days": "select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data from pat_exception_data_last30 group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude"
},	
{
"pat_exception_grade_district_all":"select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from(select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select a.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join  (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by district_id) as b on a.district_id = b.district_id) union (select c.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id )as d on c.district_id = d.district_id))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade;"
},
{
"pat_exception_grade_block_all":"select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,            'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join  (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by block_id) as b on a.block_id = b.block_id)union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id )as d on c.block_id = d.block_id))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade;"
},
{
"pat_exception_grade_cluster_all":"select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools',total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_all where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by cluster_id) as b on a.cluster_id = b.cluster_id) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_all where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id )as d on c.cluster_id = d.cluster_id))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade;"
},
{
"pat_exception_grade_school_all":"select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_all where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_all where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade;"
},
{
"pat_exception_grade_district_last_7_days":"select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,            'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select a.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by district_id) as b on a.district_id = b.district_id) union (select c.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id )as d on c.district_id = d.district_id))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade;"
},
{
"pat_exception_grade_block_last_7_days":"select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,            'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by block_id) as b on a.block_id = b.block_id)union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id )as d on c.block_id = d.block_id))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade;"
},
{
"pat_exception_grade_cluster_last_7_days":"select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools',total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last7 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by cluster_id) as b on a.cluster_id = b.cluster_id) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last7 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id )as d on c.cluster_id = d.cluster_id))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade;"
},
{
"pat_exception_grade_school_last_7_days":"select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_last30 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_last30 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade;"
},
{
"pat_exception_grade_district_last_30_days":"select s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,            'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.district_latitude,a.district_longitude,a.district_id,a.district_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_datafrom ((select a.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject) as a inner join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by district_id) as b on a.district_id = b.district_id) union (select c.district_id,district_name,district_latitude,district_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,district_latitude,district_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,district_latitude,district_longitude,grade,subject)as c inner join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id )as d on c.district_id = d.district_id))as a)as s group by s.district_latitude,s.district_longitude,s.district_id,s.district_name,s.grade;"
},
{
"pat_exception_grade_block_last_30_days":"select s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from (select a.block_latitude,a.block_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,a.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject) as a inner join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by block_id) as b on a.block_id = b.block_id)union (select district_id,district_name,c.block_id,block_name,block_latitude,block_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,grade,subject)as c inner join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id )as d on c.block_id = d.block_id))as a)as s group by s.block_latitude,s.block_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.grade;"
},
{
"pat_exception_grade_cluster_last_30_days":"select s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools',total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data,'percentage_schools_with_missing_data',percentage_schools_with_missing_data))) as subjects from(select a.cluster_latitude,a.cluster_longitude,a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.grade,a.subject,a.total_schools,a.total_schools_not_received as Total_schools_with_missing_data,round((cast(a.total_schools_not_received as numeric)/cast(a.total_schools as numeric))*100.0,2) as percentage_schools_with_missing_data from ((select district_id,district_name,block_id,block_name,a.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS total_schools_not_received from pat_exception_grade_data_last30 where subject !='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject) as a inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details b group by cluster_id) as b on a.cluster_id = b.cluster_id) union (select district_id,district_name,block_id,block_name,c.cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,total_schools_with_missing_data_grade as total_schools_not_received,total_schools from(select district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject,Count(DISTINCT(school_id)) AS  total_schools_with_missing_data_grade from pat_exception_grade_data_last30 where subject ='grade' group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,grade,subject)as c inner join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id )as d on c.cluster_id = d.cluster_id))as a)as s group by s.cluster_latitude,s.cluster_longitude,s.district_id,s.district_name,s.block_id,s.block_name,s.cluster_id,s.cluster_name,s.grade;"
},
{
"pat_exception_grade_school_last_30_days":"select school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,sum(s.Total_schools_with_missing_data)as Total_schools_with_missing_data,sum(total_schools)as total_schools,round((cast(sum(s.Total_schools_with_missing_data) as numeric)/cast(sum(s.total_schools) as numeric))*100.0,2) as percentage_schools_with_missing_data,json_agg(json_build_object(subject,json_build_object('total_schools', total_schools,'total_schools_with_missing_data', Total_schools_with_missing_data))) as subjects from ((select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_last30 where subject!='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade,subject) union (select distinct school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade,'grade' as subject,Count(DISTINCT(school_id)) AS Total_schools_with_missing_data,Count(DISTINCT(school_id)) AS total_schools from pat_exception_grade_data_last30 where subject ='grade' group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,grade))as s group by school_latitude,school_longitude,district_id,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,grade;"
}
]

